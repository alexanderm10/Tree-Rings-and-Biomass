valles.inc.stack$range <- valles.inc.stack$inc.UB - valles.inc.stack$inc.LB
summary(valles.inc.stack[valles.inc.stack$SiteID=="VLF",])
summary(valles.inc.stack[valles.inc.stack$SiteID=="VUF",])
#combine the different areas into one figure
#
# Order of operations
# 1)variability in the tree rings
# 2)allometric uncertainty
# 3)density uncertainty
# 4)mortality adustment
# Creating a dataframe that adds the uncertainties together
# will use the mean from the allometric uncertainty as our root
# doing a test first with just VLF--it worked--- expanding to both sites at Valles Caldera.
bm.final <- data.frame(Year=unique(allom.uncert$Year), SiteID=allom.uncert$SiteID,
Base=allom.uncert[,"Mean"])
bm.final$LB.inc <- bm.final$Base - valles.inc.stack[,"LB.dev"]
bm.final$UB.inc <- bm.final$Base + valles.inc.stack[,"UB.dev"]
bm.final$LB.inc <- ifelse(bm.final$LB.inc<0, 0, bm.final$LB.inc)
bm.final$LB.allom <- bm.final$LB.inc - allom.uncert[, "LB.dev"]
bm.final$UB.allom <- bm.final$UB.inc + allom.uncert[, "UB.dev"]
bm.final$LB.allom <- ifelse(bm.final$LB.allom<0, 0, bm.final$LB.allom)
bm.final$LB.dens <- bm.final$LB.allom - dens.uncert[, "LB.dev"]
bm.final$UB.dens <- bm.final$UB.allom + dens.uncert[, "UB.dev"]
bm.final$LB.dens <- ifelse(bm.final$LB.dens<0, 0, bm.final$LB.dens)
bm.final$LB.mort <- bm.final$LB.dens - mort.uncert[, "LB.dev"]
bm.final$UB.mort <- bm.final$UB.dens + mort.uncert[, "UB.dev"]
bm.final$LB.mort <- ifelse(bm.final$LB.dens<0, 0, bm.final$LB.dens)
summary(bm.final)
summary(bm.final[bm.final$SiteID=="VLF",])
summary(bm.final[bm.final$SiteID=="VUF",])
# finding the range of the uncertainties
vlf.final <- bm.final[bm.final$SiteID=="VLF",]
vuf.final <- bm.final[bm.final$SiteID=="VUF",]
vlf.final$range <- vlf.final$UB.mort - vlf.final$LB.mort
vuf.final$range <- vuf.final$UB.mort - vuf.final$LB.mort
summary(vlf.final)
summary(vuf.final)
ggplot(bm.final[bm.final$Year >= 1925 & bm.final$Year <=2011,]) + facet_grid(SiteID ~ .) +
geom_line(aes(x=Year, y=Base), size=1.5, color="black") +
#1) Increment Uncertainty
geom_ribbon(aes(x=Year, ymin=LB.inc, ymax=UB.inc), alpha=0.5, fill="green3") +
#2) Allometric Uncertainty -- separate for upper & lower to make things clearer
geom_ribbon(aes(x=Year, ymin=LB.allom, ymax=LB.inc), alpha=0.5, fill="blue") +
geom_ribbon(aes(x=Year, ymin=UB.allom, ymax=UB.inc), alpha=0.5, fill="blue") +
#3) Density Uncertainty -- separate for upper & lower to make things clearer
geom_ribbon(aes(x=Year, ymin=LB.dens, ymax=LB.allom), alpha=0.5, fill="red") +
geom_ribbon(aes(x=Year, ymin=UB.dens, ymax=UB.allom), alpha=0.5, fill="red") +
#4) Mortality Uncertainty -- separate for upper & lower to make things clearer
geom_ribbon(aes(x=Year, ymin=LB.mort, ymax=LB.dens), alpha=0.5, fill="orange2") +
geom_ribbon(aes(x=Year, ymin=UB.mort, ymax=UB.dens), alpha=0.5, fill="orange2") +
# Reiterate mean line for clarity
geom_line(aes(x=Year, y=Base), size=1.5, color="black") +
labs(title= "Stacked Uncertainties", x="Year", y="Aboveground Biomass (kg/m2)")
########################################################
# Uncertainty percentages
########################################################
# Looking at relative magnitudes of uncertainties
# Allometry
vlf.allom.rel <- allom.uncert[allom.uncert$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.allom.rel <- allom.uncert[allom.uncert$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.allom.rel)
summary(vuf.allom.rel)
mean(vlf.allom.rel, na.rm=T); sd(vlf.allom.rel, na.rm=T)
mean(vuf.allom.rel, na.rm=T); sd(vuf.allom.rel, na.rm=T)
# Density
vlf.dens.rel <- dens.uncert[dens.uncert$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.dens.rel <- dens.uncert[dens.uncert$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.dens.rel)
summary(vuf.dens.rel)
mean(vlf.dens.rel, na.rm=T); sd(vlf.dens.rel, na.rm=T)
mean(vuf.dens.rel, na.rm=T); sd(vuf.dens.rel, na.rm=T)
# Mortality
vlf.mort.rel <- mort.uncert[mort.uncert$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.mort.rel <- mort.uncert[mort.uncert$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.mort.rel)
summary(vuf.mort.rel)
mean(vlf.mort.rel, na.rm=T); sd(vlf.mort.rel, na.rm=T)
mean(vuf.mort.rel, na.rm=T); sd(vuf.mort.rel, na.rm=T)
# TR increment
vlf.inc.rel <- valles.inc.stack[valles.inc.stack$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.inc.rel <- valles.inc.stack[valles.inc.stack$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.inc.rel)
summary(vuf.inc.rel)
mean(vlf.inc.rel, na.rm=T); sd(vlf.inc.rel, na.rm=T)
mean(vuf.inc.rel, na.rm=T); sd(vuf.inc.rel, na.rm=T)
# Overall uncertainty
vlf.final.rel  <- vlf.final$range/vlf.final$Base
vuf.final.rel <- vuf.final$range/vuf.final$Base
mean(vlf.final.rel, na.rm=T); sd(vlf.final.rel, na.rm=T)
mean(vuf.final.rel, na.rm=T); sd(vuf.final.rel, na.rm=T)
# percentage of total uncertainty
vlf.final$range
summary(bm.final)
vlf.allom.perc <- allom.uncert[allom.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.allom.perc <- allom.uncert[allom.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.allom.perc)
summary(vuf.allom.perc)
mean(vlf.allom.perc, na.rm=T); sd(vlf.allom.rel, na.rm=T)
mean(vuf.allom.perc, na.rm=T); sd(vuf.allom.rel, na.rm=T)
vlf.dens.perc <- dens.uncert[dens.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.dens.perc <- dens.uncert[dens.uncert$SiteID=="VUF", "range"]/vUf.final$range
summary(vlf.dens.perc)
vuf.dens.perc <- dens.uncert[dens.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.dens.perc)
summary(vuf.dens.perc)
mean(vlf.dens.rel, na.rm=T); sd(vlf.dens.rel, na.rm=T)
mean(vuf.dens.rel, na.rm=T); sd(vuf.dens.rel, na.rm=T)
mean(vlf.dens.perc, na.rm=T); sd(vlf.dens.rel, na.rm=T)
mean(vuf.dens.perc, na.rm=T); sd(vuf.dens.rel, na.rm=T)
vlf.mort.perc <- mort.uncert[mort.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.mort.perc <- mort.uncert[mort.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.mort.perc)
summary(vuf.mort.perc)
mean(vlf.mort.perc, na.rm=T); sd(vlf.mort.perc, na.rm=T)
mean(vuf.mort.perc, na.rm=T); sd(vuf.mort.perc, na.rm=T)
vlf.inc.perc <- valles.inc.stack[valles.inc.stack$SiteID=="VLF", "range"]/vlf.final$range
vuf.inc.perc <- valles.inc.stack[valles.inc.stack$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.inc.perc)
summary(vuf.inc.perc)
mean(vlf.inc.perc, na.rm=T); sd(vlf.inc.perc, na.rm=T)
mean(vuf.inc.perc, na.rm=T); sd(vuf.inc.perc, na.rm=T)
vlf.allom.perc <- allom.uncert[allom.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.allom.perc <- allom.uncert[allom.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.allom.perc)
summary(vuf.allom.perc)
mean(vlf.allom.perc, na.rm=T); sd(vlf.allom.perc, na.rm=T)
mean(vuf.allom.perc, na.rm=T); sd(vuf.allom.perc, na.rm=T)
vlf.dens.perc <- dens.uncert[dens.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.dens.perc <- dens.uncert[dens.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.dens.perc)
summary(vuf.dens.perc)
mean(vlf.dens.perc, na.rm=T); sd(vlf.dens.perc, na.rm=T)
mean(vuf.dens.perc, na.rm=T); sd(vuf.dens.perc, na.rm=T)
vlf.mort.perc <- mort.uncert[mort.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.mort.perc <- mort.uncert[mort.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.mort.perc)
summary(vuf.mort.perc)
mean(vlf.mort.perc, na.rm=T); sd(vlf.mort.perc, na.rm=T)
mean(vuf.mort.perc, na.rm=T); sd(vuf.mort.perc, na.rm=T)
vlf.inc.perc <- valles.inc.stack[valles.inc.stack$SiteID=="VLF", "range"]/vlf.final$range
vuf.inc.perc <- valles.inc.stack[valles.inc.stack$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.inc.perc)
summary(vuf.inc.perc)
mean(vlf.inc.perc, na.rm=T); sd(vlf.inc.perc, na.rm=T)
mean(vuf.inc.perc, na.rm=T); sd(vuf.inc.perc, na.rm=T)
mean(vlf.final$range, na.rm=T); sd(vlf.final$range, na.rm=T)
mean(vuf.final$range, na.rm=T); sd(vuf.final$range, na.rm=T)
mean(vlf.dens.perc, na.rm=T); sd(vlf.dens.perc, na.rm=T)
mean(vuf.dens.perc, na.rm=T); sd(vuf.dens.perc, na.rm=T)
mean(vlf.mort.perc, na.rm=T); sd(vlf.mort.perc, na.rm=T)
mean(vuf.mort.perc, na.rm=T); sd(vuf.mort.perc, na.rm=T)
mean(vlf.allom.perc, na.rm=T); sd(vlf.allom.perc, na.rm=T)
mean(vuf.allom.perc, na.rm=T); sd(vuf.allom.perc, na.rm=T)
mean(vlf.inc.perc, na.rm=T); sd(vlf.inc.perc, na.rm=T)
mean(vuf.inc.perc, na.rm=T); sd(vuf.inc.perc, na.rm=T)
library(ggplot2)
##############################################################################
# wanting to make a composite figure showing the contribution of uncertainties
##############################################################################
# loading in the various datasets that will be needed
# allometric uncertainty of BM at the site level
load("valles_allometry_uncertainty.Rdata")
allom.uncert$LB.dev <- allom.uncert$Mean - allom.uncert$LB
allom.uncert$UB.dev <-  allom.uncert$UB - allom.uncert$Mean
allom.uncert <- allom.uncert[order(allom.uncert$Year),]
allom.uncert <- allom.uncert[order(allom.uncert$SiteID),]
summary(allom.uncert)
allom.uncert$range <- allom.uncert$UB - allom.uncert$LB
summary(allom.uncert[allom.uncert$SiteID=="VLF",])
summary(allom.uncert[allom.uncert$SiteID=="VUF",])
# density BM--uses mean allometric eqtn. and accounts for differences in density with just ROSS plots
load("valles_density_uncertainty.Rdata")
dens.uncert$LB.dev <- dens.uncert$Mean - dens.uncert$LB
dens.uncert$UB.dev <-  dens.uncert$UB - dens.uncert$Mean
dens.uncert <- dens.uncert[order(dens.uncert$Year),]
dens.uncert <- dens.uncert[order(dens.uncert$SiteID),]
summary(dens.uncert)
dens.uncert$range <- dens.uncert$UB - dens.uncert$LB
summary(dens.uncert[dens.uncert$SiteID=="VLF",])
summary(dens.uncert[dens.uncert$SiteID=="VUF",])
# mortality Uncertainty of BM at the site level
load("valles_mortality_uncertainty.Rdata")
dummy.year <- data.frame(Year=dens.uncert$Year, SiteID=dens.uncert$SiteID)
mort.uncert <- merge(mort.uncert, dummy.year, all.x=T, all.y=T)
mort.uncert <- mort.uncert[order(mort.uncert$Year),]
mort.uncert <- mort.uncert[order(mort.uncert$SiteID),]
mort.uncert$LB.dev <- dens.uncert$Mean - mort.uncert$LB
mort.uncert$UB.dev <-  mort.uncert$UB - dens.uncert$Mean
summary(mort.uncert)
mort.uncert$range <- mort.uncert$UB - mort.uncert$LB
summary(mort.uncert[mort.uncert$SiteID=="VLF",])
summary(mort.uncert[mort.uncert$SiteID=="VUF",])
# uncertainty in the increment
load("dated_v_all_valles.inc.stack.Rdata")
valles.inc.stack <- valles.inc.stack[valles.inc.stack$group=="all",]
valles.inc.stack <- valles.inc.stack[order(valles.inc.stack$Year),]
valles.inc.stack <- valles.inc.stack[order(valles.inc.stack$SiteID),]
valles.inc.stack$LB.dev <- valles.inc.stack$Mean.inc - valles.inc.stack$inc.LB
valles.inc.stack$UB.dev <- valles.inc.stack$inc.UB - valles.inc.stack$Mean.inc
summary(valles.inc.stack)
valles.inc.stack$range <- valles.inc.stack$inc.UB - valles.inc.stack$inc.LB
summary(valles.inc.stack[valles.inc.stack$SiteID=="VLF",])
summary(valles.inc.stack[valles.inc.stack$SiteID=="VUF",])
#combine the different areas into one figure
#
# Order of operations
# 1)variability in the tree rings
# 2)allometric uncertainty
# 3)density uncertainty
# 4)mortality adustment
# Creating a dataframe that adds the uncertainties together
# will use the mean from the allometric uncertainty as our root
# doing a test first with just VLF--it worked--- expanding to both sites at Valles Caldera.
bm.final <- data.frame(Year=unique(allom.uncert$Year), SiteID=allom.uncert$SiteID,
Base=allom.uncert[,"Mean"])
bm.final$LB.inc <- bm.final$Base - valles.inc.stack[,"LB.dev"]
bm.final$UB.inc <- bm.final$Base + valles.inc.stack[,"UB.dev"]
bm.final$LB.inc <- ifelse(bm.final$LB.inc<0, 0, bm.final$LB.inc)
bm.final$LB.allom <- bm.final$LB.inc - allom.uncert[, "LB.dev"]
bm.final$UB.allom <- bm.final$UB.inc + allom.uncert[, "UB.dev"]
bm.final$LB.allom <- ifelse(bm.final$LB.allom<0, 0, bm.final$LB.allom)
bm.final$LB.dens <- bm.final$LB.allom - dens.uncert[, "LB.dev"]
bm.final$UB.dens <- bm.final$UB.allom + dens.uncert[, "UB.dev"]
bm.final$LB.dens <- ifelse(bm.final$LB.dens<0, 0, bm.final$LB.dens)
bm.final$LB.mort <- bm.final$LB.dens - mort.uncert[, "LB.dev"]
bm.final$UB.mort <- bm.final$UB.dens + mort.uncert[, "UB.dev"]
bm.final$LB.mort <- ifelse(bm.final$LB.dens<0, 0, bm.final$LB.dens)
summary(bm.final)
summary(bm.final[bm.final$SiteID=="VLF",])
summary(bm.final[bm.final$SiteID=="VUF",])
# finding the range of the uncertainties
vlf.final <- bm.final[bm.final$SiteID=="VLF",]
vuf.final <- bm.final[bm.final$SiteID=="VUF",]
vlf.final$range <- vlf.final$UB.mort - vlf.final$LB.mort
vuf.final$range <- vuf.final$UB.mort - vuf.final$LB.mort
summary(vlf.final)
summary(vuf.final)
ggplot(bm.final[bm.final$Year >= 1925 & bm.final$Year <=2011,]) + facet_grid(SiteID ~ .) +
geom_line(aes(x=Year, y=Base), size=1.5, color="black") +
#1) Increment Uncertainty
geom_ribbon(aes(x=Year, ymin=LB.inc, ymax=UB.inc), alpha=0.5, fill="green3") +
#2) Allometric Uncertainty -- separate for upper & lower to make things clearer
geom_ribbon(aes(x=Year, ymin=LB.allom, ymax=LB.inc), alpha=0.5, fill="blue") +
geom_ribbon(aes(x=Year, ymin=UB.allom, ymax=UB.inc), alpha=0.5, fill="blue") +
#3) Density Uncertainty -- separate for upper & lower to make things clearer
geom_ribbon(aes(x=Year, ymin=LB.dens, ymax=LB.allom), alpha=0.5, fill="red") +
geom_ribbon(aes(x=Year, ymin=UB.dens, ymax=UB.allom), alpha=0.5, fill="red") +
#4) Mortality Uncertainty -- separate for upper & lower to make things clearer
geom_ribbon(aes(x=Year, ymin=LB.mort, ymax=LB.dens), alpha=0.5, fill="orange2") +
geom_ribbon(aes(x=Year, ymin=UB.mort, ymax=UB.dens), alpha=0.5, fill="orange2") +
# Reiterate mean line for clarity
geom_line(aes(x=Year, y=Base), size=1.5, color="black") +
labs(title= "Stacked Uncertainties", x="Year", y="Aboveground Biomass (kg/m2)")
########################################################
# Uncertainty percentages
########################################################
# Looking at relative magnitudes of uncertainties
# Allometry
vlf.allom.rel <- allom.uncert[allom.uncert$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.allom.rel <- allom.uncert[allom.uncert$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.allom.rel)
summary(vuf.allom.rel)
mean(vlf.allom.rel, na.rm=T); sd(vlf.allom.rel, na.rm=T)
mean(vuf.allom.rel, na.rm=T); sd(vuf.allom.rel, na.rm=T)
# Density
vlf.dens.rel <- dens.uncert[dens.uncert$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.dens.rel <- dens.uncert[dens.uncert$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.dens.rel)
summary(vuf.dens.rel)
mean(vlf.dens.rel, na.rm=T); sd(vlf.dens.rel, na.rm=T)
mean(vuf.dens.rel, na.rm=T); sd(vuf.dens.rel, na.rm=T)
# Mortality
vlf.mort.rel <- mort.uncert[mort.uncert$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.mort.rel <- mort.uncert[mort.uncert$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.mort.rel)
summary(vuf.mort.rel)
mean(vlf.mort.rel, na.rm=T); sd(vlf.mort.rel, na.rm=T)
mean(vuf.mort.rel, na.rm=T); sd(vuf.mort.rel, na.rm=T)
# TR increment
vlf.inc.rel <- valles.inc.stack[valles.inc.stack$SiteID=="VLF", "range"]/allom.uncert[allom.uncert$SiteID=="VLF", "Mean"]
vuf.inc.rel <- valles.inc.stack[valles.inc.stack$SiteID=="VUF", "range"]/allom.uncert[allom.uncert$SiteID=="VUF", "Mean"]
summary(vlf.inc.rel)
summary(vuf.inc.rel)
mean(vlf.inc.rel, na.rm=T); sd(vlf.inc.rel, na.rm=T)
mean(vuf.inc.rel, na.rm=T); sd(vuf.inc.rel, na.rm=T)
# Overall uncertainty
vlf.final.rel  <- vlf.final$range/vlf.final$Base
vuf.final.rel <- vuf.final$range/vuf.final$Base
mean(vlf.final.rel, na.rm=T); sd(vlf.final.rel, na.rm=T)
mean(vuf.final.rel, na.rm=T); sd(vuf.final.rel, na.rm=T)
#################################################################
# percentage of total uncertainty
#################################################################
# Allometry
vlf.allom.perc <- allom.uncert[allom.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.allom.perc <- allom.uncert[allom.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.allom.perc)
summary(vuf.allom.perc)
mean(vlf.allom.perc, na.rm=T); sd(vlf.allom.perc, na.rm=T)
mean(vuf.allom.perc, na.rm=T); sd(vuf.allom.perc, na.rm=T)
# Density
vlf.dens.perc <- dens.uncert[dens.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.dens.perc <- dens.uncert[dens.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.dens.perc)
summary(vuf.dens.perc)
mean(vlf.dens.perc, na.rm=T); sd(vlf.dens.perc, na.rm=T)
mean(vuf.dens.perc, na.rm=T); sd(vuf.dens.perc, na.rm=T)
# Mortality
vlf.mort.perc <- mort.uncert[mort.uncert$SiteID=="VLF", "range"]/vlf.final$range
vuf.mort.perc <- mort.uncert[mort.uncert$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.mort.perc)
summary(vuf.mort.perc)
mean(vlf.mort.perc, na.rm=T); sd(vlf.mort.perc, na.rm=T)
mean(vuf.mort.perc, na.rm=T); sd(vuf.mort.perc, na.rm=T)
# TR increment
vlf.inc.perc <- valles.inc.stack[valles.inc.stack$SiteID=="VLF", "range"]/vlf.final$range
vuf.inc.perc <- valles.inc.stack[valles.inc.stack$SiteID=="VUF", "range"]/vuf.final$range
summary(vlf.inc.perc)
summary(vuf.inc.perc)
mean(vlf.inc.perc, na.rm=T); sd(vlf.inc.perc, na.rm=T)
mean(vuf.inc.perc, na.rm=T); sd(vuf.inc.perc, na.rm=T)
mean(vlf.final$range, na.rm=T); sd(vlf.final$range, na.rm=T)
mean(vuf.final$range, na.rm=T); sd(vuf.final$range, na.rm=T)
library(ggplot2)
# exploratory analysis of Marcy Litvak's Valles Caldera Data
ross.trees <- read.csv("raw input files/tree_metadata_DOE_plus_valles.csv", na.strings=c("", "NA", "#VALUE!", "*"),header=T)
# subsetting only the valles trees from the overall trees list
summary(ross.trees)
ross.valles <- ross.trees[substr(ross.trees$PlotID,1,1)=="V",]
summary(ross.valles)
# reducing the number of columns in the data frame
ross.valles<- ross.valles[,c("TreeID", "PlotID", "Species","DBH..cm.", "Density..stems.ha.")]
names(ross.valles)<- c("tree.id", "plot.id", "species", "dbh", "density")
ross.valles$density <- ross.valles$density/10000
summary(ross.valles)
# settign site as a factor
ross.valles$site<- as.factor(substr(ross.valles$plot.id, 1, 2))
summary(ross.valles)
ross.pipo <- ross.valles[substr(ross.valles$plot.id,1,2)=="VL",]
ross.mcon <- ross.valles[substr(ross.valles$plot.id,1,2)=="VU",]
summary(ross.pipo)
summary(ross.mcon)
# read in Marcy's tree tree data
marcy.ppine <- read.csv("raw input files/marcy_ppine_2013.csv")
summary(marcy.ppine)
marcy.mcon <- read.csv("raw input files/marcy_mcon_2012.csv")
summary(marcy.mcon)
names(marcy.ppine)
names(marcy.mcon)
# Merging the two into 1 data frame and doing a bit of formatting
marcy <- rbind(marcy.ppine[,names(marcy.ppine) %in%  names(marcy.mcon)], marcy.mcon)
# marcy$PlotID <- as.factor(paste(substr(marcy$Site, 1,3), marcy$Transect, sep="."))
marcy$PlotID <- as.factor(paste(substr(marcy$Site, 1,3), marcy$Plot_Name, sep="."))
names(marcy)[16] <- "DBH..cm."
marcy$Tree_Tag_Number <- as.factor(paste0("X", marcy$Tree_Tag_Number))
#marcy <- marcy[!marcy$Tree_Tag_Number=="X476",]
summary(marcy)
#### ------------
marcy.density <- aggregate(marcy[,c("Plot_Radius")], by=list(marcy[,"PlotID"]), FUN=length)
names(marcy.density) <- c("PlotID", "n.stems")
marcy.density$Density.Total..stems.m2. <- marcy.density$n.stems/(pi*10^2)
summary(marcy.density)
# Merging the plot densities back into marcy's data
marcy <- merge(marcy, marcy.density)
summary(marcy)
marcy.valles <- marcy[, c("Tree_Tag_Number", "PlotID", "Species", "DBH..cm.", "Density.Total..stems.m2.", "Site")]
names(marcy.valles) <- c("tree.id", "plot.id", "species", "dbh", "density", "site")
summary(marcy.valles)
dim(marcy.valles)
# Creating one object with Ross and Marcy data
all.valles<-merge(marcy.valles, ross.valles, all.x=T, all.y=T)
summary(all.valles)
all.valles$site<- ifelse(substr(all.valles$site, 1, 2)=="VL", "ppine.ross",
ifelse(substr(all.valles$site,1,2)=="VU", "mcon.ross",
ifelse(all.valles$site=="PPINE", "ppine.marcy", "mcon.marcy")))
all.valles$site<-as.factor(all.valles$site)
summary(all.valles)
dbh.bins1 <- seq(0, max(all.valles$dbh, na.rm=T), 2)
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/m2") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/m2") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
# -----------------------
# Ignoring species for a minute
unique(all.valles$density)
valles.plot <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id), FUN=mean, na.rm=T)
names(valles.plot) <- c("site", "plot.id", "density")
unique(valles.plot$density)
valles.plot
valles.site <- aggregate(valles.plot$density, by=list(valles.plot$site), FUN=mean)
names(valles.site) <- c("site", "density")
valles.site
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density))+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_discrete(name="Site")+scale_y_continuous(name="Stems/m2") + ggtitle("Size Distribution weighted by Density; VLB overlay in black") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
# -----------------------
all.valles$dbh.2 <- round(all.valles$dbh)
summary(all.valles)
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id, all.valles$species, all.valles$dbh.2), FUN=mean, na.rm=T)
names(valles.plot2) <- c("site", "plot.id", "species", "dbh", "density")
summary(valles.plot2)
unique(valles.plot2$density)
library(car)
valles.plot2$site2 <- as.factor(ifelse(substr(valles.plot2$site,1,4)=="mcon", "mcon", "ppine"))
unique(valles.plot2$plot.id)
valles.plot2$plot.id2 <- as.factor(ifelse(substr(valles.plot2$plot.id,1,3)=="PPI", paste("Marcy", substr(valles.plot2$plot.id,5,5), sep = "."),
ifelse(substr(valles.plot2$plot.id,1,3)=="MCO", paste("Marcy",substr(valles.plot2$plot.id,5,5), sep="."),
ifelse(substr(valles.plot2$plot.id,3,3)=="A","Ross.A", "Ross.B"))))
summary(valles.plot2)
unique(valles.plot2$density)
qplot(x=dbh, data=valles.plot2, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(plot.id2 ~ site2)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/m2") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
valles.site2 <- aggregate(valles.plot2$density, by=list(valles.plot2$site, valles.plot2$species, valles.plot2$dbh), FUN=mean)
names(valles.site2) <- c("site", "species", "dbh", "density")
unique(valles.site2$density)
summary(valles.site2)
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/m2") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
load("/Users/mrossalexander/PhD/Carbon Research/Tree-Rings-and-Biomass/Uncertainty_analysis/marcy_bm_recon.Rdata")
summary(biom.marcy)
head(biom.marcy)
load("valles_allometry_uncertainty.Rdata")
load("valles_allometry_uncertainty.Rdata")
summary(allom.uncertainty)
summary(allom.uncert)
load("/Users/mrossalexander/PhD/Carbon Research/Tree-Rings-and-Biomass/Uncertainty_analysis/site_density.Rdata")
summary(site.density)
library(ggplot2)
# exploratory analysis of Marcy Litvak's Valles Caldera Data
ross.trees <- read.csv("raw input files/tree_metadata_DOE_plus_valles.csv", na.strings=c("", "NA", "#VALUE!", "*"),header=T)
# subsetting only the valles trees from the overall trees list
summary(ross.trees)
ross.valles <- ross.trees[substr(ross.trees$PlotID,1,1)=="V",]
summary(ross.valles)
# reducing the number of columns in the data frame
ross.valles<- ross.valles[,c("TreeID", "PlotID", "Species","DBH..cm.", "Density..stems.ha.")]
names(ross.valles)<- c("tree.id", "plot.id", "species", "dbh", "density")
ross.valles$density <- ross.valles$density/10000
summary(ross.valles)
# settign site as a factor
ross.valles$site<- as.factor(substr(ross.valles$plot.id, 1, 2))
summary(ross.valles)
ross.pipo <- ross.valles[substr(ross.valles$plot.id,1,2)=="VL",]
ross.mcon <- ross.valles[substr(ross.valles$plot.id,1,2)=="VU",]
summary(ross.pipo)
summary(ross.mcon)
# read in Marcy's tree tree data
marcy.ppine <- read.csv("raw input files/marcy_ppine_2013.csv")
summary(marcy.ppine)
marcy.mcon <- read.csv("raw input files/marcy_mcon_2012.csv")
summary(marcy.mcon)
names(marcy.ppine)
names(marcy.mcon)
# Merging the two into 1 data frame and doing a bit of formatting
marcy <- rbind(marcy.ppine[,names(marcy.ppine) %in%  names(marcy.mcon)], marcy.mcon)
# marcy$PlotID <- as.factor(paste(substr(marcy$Site, 1,3), marcy$Transect, sep="."))
marcy$PlotID <- as.factor(paste(substr(marcy$Site, 1,3), marcy$Plot_Name, sep="."))
names(marcy)[16] <- "DBH..cm."
marcy$Tree_Tag_Number <- as.factor(paste0("X", marcy$Tree_Tag_Number))
#marcy <- marcy[!marcy$Tree_Tag_Number=="X476",]
summary(marcy)
#### ------------
marcy.density <- aggregate(marcy[,c("Plot_Radius")], by=list(marcy[,"PlotID"]), FUN=length)
names(marcy.density) <- c("PlotID", "n.stems")
marcy.density$Density.Total..stems.m2. <- marcy.density$n.stems/(pi*10^2)
summary(marcy.density)
# Merging the plot densities back into marcy's data
marcy <- merge(marcy, marcy.density)
summary(marcy)
marcy.valles <- marcy[, c("Tree_Tag_Number", "PlotID", "Species", "DBH..cm.", "Density.Total..stems.m2.", "Site")]
names(marcy.valles) <- c("tree.id", "plot.id", "species", "dbh", "density", "site")
summary(marcy.valles)
dim(marcy.valles)
summary(marcy.valles)
save(marcy.valles, file="marcy_valles_metadata.Rdata")
summary(marcy.ppine)
summary(marcy.mcon)
summary(marcy.valles)
marcy.valles$year <- ifelse(marcy.valles$Site == "PPINE", 2013, 2012)
marcy.valles$Site == "PPINE"
marcy.valles$Site <- as.factor(marcy.valles$Site)
marcy.valles$year <- ifelse(marcy.valles$site == "PPINE", 2013, 2012)
summary(marcy.valles)
save(marcy.valles, file="marcy_valles_metadata.Rdata")
load("valles_allometry_uncertainty.Rdata")
summary(allom.uncert)
head(allom.uncerty)
head(allom.uncert)
load("/Users/mrossalexander/PhD/Carbon Research/Tree-Rings-and-Biomass/Uncertainty_analysis/valles_bm_recon_stack.Rdata")
summary(biom.valles.stack)
load("/Users/mrossalexander/PhD/Carbon Research/Tree-Rings-and-Biomass/Uncertainty_analysis/valles_bm_recon.Rdata")
summary(biom.valles)
load("valles_density_uncertainty.Rdata")
ggplot(dens.uncert[dens.uncert$Year <=2011,]) + facet_grid(SiteID ~ .) +
geom_ribbon(aes(x=Year, ymin=LB, ymax=UB, fill=SiteID), alpha=0.5) +
geom_line(aes(x=Year, y=Mean, color=SiteID))
summary(biom.valles)
head(biom.valles)
