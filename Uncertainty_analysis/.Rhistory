min(bm.increment, na.rm=T)
head(bm.increment)
biom.inc.mean <- apply(bm.increment[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.ci <- apply(bm.increment[,,], c(1,2), sd) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.mean <- as.data.frame(biom.inc.mean)
names(biom.inc.mean)<- c("VLA", "VLB", "VUA", "VUB")
summary(biom.inc.mean)
biom.inc.ci <-as.data.frame(biom.inc.ci)
names(biom.inc.ci)<- c("VLA.ci", "VLB.ci", "VUA.ci", "VUB.ci")
summary(biom.inc.ci)
biom.inc.valles <- as.data.frame(c(biom.inc.mean, biom.inc.ci))
row.names(biom.inc.valles) <- row.names(biom.inc.mean)
summary(biom.inc.valles)
head(biom.inc.valles)
save(biom.inc.valles, file="biom.valles_inc.csv")
biom.valles.inc.dens <- biom.inc.valles
biom.valles.inc.dens$VLA <- biom.valles.inc.dens$VLA /144/1000 #*0.59
biom.valles.inc.dens$VLA.ci <- biom.valles.inc.dens$VLA.ci /144/1000
biom.valles.inc.dens$VLB <- biom.valles.inc.dens$VLB /624/1000 # *0.09
biom.valles.inc.dens$VLB.ci <- biom.valles.inc.dens$VLB.ci /624/1000
biom.valles.inc.dens$VUA <- biom.valles.inc.dens$VUA /576/1000 #0.11
biom.valles.inc.dens$VUA.ci <- biom.valles.inc.dens$VUA.ci /576/1000
biom.valles.inc.dens$VUB <- biom.valles.inc.dens$VUB /576/1000 #0.19
biom.valles.inc.dens$VUB.ci <- biom.valles.inc.dens$VUB.ci /576/1000
summary(biom.valles.inc.dens)
#now in kilograms of biomass increment per plot
save(biom.valles.inc.dens, file="valles_bm_inc_m2.csv")
# Expository graphs for valles caldera
valles.plot<- ggplot()  +
# plotting total site basal area
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pipo.mean - 1.96*nt.pipo.ci, ymax=nt.pipo.mean + 1.96*nt.pipo.ci), alpha=0.15, fill="red")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.piaz.mean - 1.96*nt.piaz.ci, ymax=nt.piaz.mean + 1.96*nt.piaz.ci), alpha=0.15, fill="orange")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.spp.mean - 1.96*nt.pine.spp.ci, ymax=nt.pine.spp.mean + 1.96*nt.pine.spp.ci), alpha=0.15, fill="green")+
#geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.vcnp.mean - 1.96*nt.vcnp.ci, ymax=nt.vcnp.mean + 1.96*nt.vcnp.ci), alpha=0.15, fill="purple")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.dom.mean - 1.96*nt.pine.dom.ci, ymax=nt.pine.dom.mean + 1.96*nt.pine.dom.ci), alpha=0.15, fill="blue")+
geom_line(data=vlf.year,  aes(x=year, y=nt.pipo.mean), size=1.5, colour="red") +
geom_line(data= vlf.year, aes(x=year, y=nt.piaz.mean), size=1.5, colour="orange") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.spp.mean), size=1.5,colour="green") +
#geom_line(data= vlf.year, aes(x=year, y=nt.vcnp.mean), size=1.5,colour="purple") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.dom.mean), size=1.5,colour="blue") +
geom_line(data= vlf.bm.avg.gf, aes(x=year, y=jenkins.pine), size=1.5,colour="black") +
# load in the diameter reconstructions generated by Christy.  These are based upon gapfilled tree ring data using the fancy model.
g.filled.diam <- read.csv("GapFilling_DBHrecon_ALL.csv", header=T, row.names=1)
g.filled.diam <- g.filled.diam[,substr(names(g.filled.diam),1,1)=="V"]
summary(g.filled.diam)
# read in tree data
tree.data <- read.csv("TreeData.csv", header=T)
summary(tree.data)
#trees.use <- tree.data[substr(tree.data$PlotID, 1, 1)=="V" | substr(tree.data$PlotID, 1, 2)=="MM",]
trees.use <- tree.data[substr(tree.data$PlotID, 1, 1)=="V",]
summary(trees.use)
summary(trees.use[substr(trees.use$PlotID, 1, 2)=="VU",])
summary(trees.use[substr(trees.use$PlotID, 1, 2)=="VL",])
g.filled.diam <- read.csv("GapFilling_DBHrecon_ALL.csv", header=T, row.names=1)
g.filled.diam <- g.filled.diam[,substr(names(g.filled.diam),1,1)=="V"]
summary(g.filled.diam)
# read in tree data
tree.data <- read.csv("TreeData.csv", header=T)
summary(tree.data)
#trees.use <- tree.data[substr(tree.data$PlotID, 1, 1)=="V" | substr(tree.data$PlotID, 1, 2)=="MM",]
trees.use <- tree.data[substr(tree.data$PlotID, 1, 1)=="V" & tree.data$Dated=="Y",]
trees.use <- trees.use[!is.na(trees.use$TreeID),]
head(trees.use)
dim(trees.use)
summary(trees.use[substr(trees.use$PlotID, 1, 2)=="VU",])
summary(trees.use[substr(trees.use$PlotID, 1, 2)=="VL",])
#making g.filled.diam the same length as tree.data
g.filled.diam <- g.filled.diam[,substr(names(g.filled.diam),1,1)=="V" & names(g.filled.diam) %in% trees.use$TreeID]
dim(g.filled.diam)
summary(trees.use)
35/50
42/51
biom.mean <- apply(bm.array[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.ci <- apply(bm.array[,,], c(1,2), quantile, c(0.025, 0.975)) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
# biom.se <- apply(bm.array[,,], c(1,2), se)
biom.mean <- as.data.frame(biom.mean)
names(biom.mean)<- paste(plots, "Dated", c("70%", "82%", "82%", "90%"), sep=".")
biom.lbound <- data.frame(biom.ci[1,,])
names(biom.lbound) <- paste(plots, "LB", c(), "Dated", sep=".")
biom.ubound <- data.frame(biom.ci[2,,])
names(biom.ubound) <- paste(plots, "UB", "Dated", sep=".")
# biom.ci <-as.data.frame(biom.ci)
# names(biom.ci)<- c(paste(plots, "sd", sep="."))
# biom.se <-as.data.frame(biom.se)
# names(biom.se)<- c(paste(plots, "se", sep="."))
biom.valles.dated <- as.data.frame(c(biom.mean, biom.lbound, biom.ubound))
row.names(biom.valles.dated) <- row.names(biom.mean)
summary(biom.valles.dated)
head(biom.valles.dated)
save(biom.valles.dated, file="valles_bm_recon_Dated_only.Rdata")
#save(biom.valles.dated, file="biom.valles.dated_cum.csv")
#---------------------------------------------------------------------
# This we did in a loop above to make it mroe flexible for the future
# (and we did it right this time)
#---------------------------------------------------------------------
# biom.valles.dated.cum.dens <- biom.valles.dated
#
# biom.valles.dated.cum.dens$VLA <- biom.valles.dated.cum.dens$VLA / 144/1000
# biom.valles.dated.cum.dens$VLA.ci <- biom.valles.dated.cum.dens$VLA.ci /144/1000
# biom.valles.dated.cum.dens$VLA.se <- biom.valles.dated.cum.dens$VLA.se /144/1000
#
# biom.valles.dated.cum.dens$VLB <- biom.valles.dated.cum.dens$VLB /624/1000
# biom.valles.dated.cum.dens$VLB.ci <- biom.valles.dated.cum.dens$VLB.ci /624/1000
# biom.valles.dated.cum.dens$VLB.se <- biom.valles.dated.cum.dens$VLB.se /624/1000
#
# biom.valles.dated.cum.dens$VUA <- biom.valles.dated.cum.dens$VUA /576/1000
# biom.valles.dated.cum.dens$VUA.ci <- biom.valles.dated.cum.dens$VUA.ci /576/1000
# biom.valles.dated.cum.dens$VUA.se <- biom.valles.dated.cum.dens$VUA.se /576/1000
#
# biom.valles.dated.cum.dens$VUB <- biom.valles.dated.cum.dens$VUB /576/1000
# biom.valles.dated.cum.dens$VUB.ci <- biom.valles.dated.cum.dens$VUB.ci /576/1000
# biom.valles.dated.cum.dens$VUB.se <- biom.valles.dated.cum.dens$VUB.se /576/1000
#
# summary(biom.valles.dated.cum.dens)
# biom.valles.dated.cum.dens$year <- as.factor(row.names(biom.valles.dated.cum.dens))
# head(biom.valles.dated.cum.dens)
# now we have biomass per m^2 for each plot with SD
#---------------------------------------------------------------------
#save(biom.valles.dated.cum.dens, file="biom_valles_dum_m2.csv")
biom.valles.dated.stack <- stack(biom.valles.dated[1:4])
names(biom.valles.dated.stack) <- c("Biom.Mean", "PlotID")
biom.valles.dated.stack$Year <- as.numeric(paste(row.names(biom.valles.dated)))
biom.valles.dated.stack$Plot <- as.factor(substr(biom.valles.dated.stack$PlotID, 3,3))
biom.valles.dated.stack$Site <- as.factor(substr(biom.valles.dated.stack$PlotID, 1,2))
summary(biom.valles.dated.stack)
biom.valles.dated.stack.lb <- stack(biom.valles.dated[5:8])
names(biom.valles.dated.stack.lb) <- c("Biom.LB", "PlotID")
biom.valles.dated.stack.ub <- stack(biom.valles.dated[9:12])
names(biom.valles.dated.stack.ub) <- c("Biom.UB", "PlotID")
biom.valles.dated.stack$Biom.LB <- biom.valles.dated.stack.lb[,1]
biom.valles.dated.stack$Biom.UB <- biom.valles.dated.stack.ub[,1]
summary(biom.valles.dated.stack)
# biom.valles.stack$Ribbon.max <- biom.valles.stack$Biom.Mean + biom.valles.stack$Biom.ci
# biom.valles.stack$Ribbon.min <- biom.valles.stack$Biom.Mean - biom.valles.stack$Biom.ci
# biom.valles.stack$Ribbon.min <- ifelse(biom.valles.stack$Ribbon.min < 0, 0, biom.valles.stack$Ribbon.min)
# biom.valles.stack$Ribbon.max <- ifelse(biom.valles.stack$Ribbon.max > 100, 100, biom.valles.stack$Ribbon.max)
summary(biom.valles.dated.stack)
save(biom.valles.dated.stack, file="valles_bm_recon_stack_DatedONLY.Rdata")
load("valles_bm_recon_stack.Rdata")
valles.composite.stack <- rbind(biom.valles.dated.stack, biom.valles.stack)
summary(valles.composite.stack)
library(ggplot2)
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$Site=="VL"),])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID)) +
ggtitle("Valles Caldera Lower (PIPO)")
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$Site=="VU"),])  + facet_grid(Plot ~ Site) +
#ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$PlotID=="VUB"),])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID)) +
ggtitle("Valles Caldera Upper (MCON)")
# valles.cum.plot<-
#pdf("Valles_Biomass_19March_Christy_ChojnackyOnly.pdf", height=8.5, width=11)
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012,])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID))
#   theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12))+
#   scale_fill_discrete(name="Model", labels = c("nt.pipo.mean", "nt.piaz.mean", "nt.pine.spp", "nt.vcnp.mean", "nt.pine.dom.mean")))
# dev.off()
# need to get the biomass increment of each year for the plots
# get the increment from the 3D array previously made
bm.array
bm.increment <- bm.array
bm.increment[1:3,,] <- NA
dim(bm.array)[3]
for(j in 1:dim(bm.increment)[3]){
# inserting oldest biomass
bm.increment[nrow(bm.increment),,j] <- bm.array[nrow(bm.increment),,j]
for(i in (nrow(bm.increment)-1):1){
bm.increment[i,,j] <- ifelse(!is.na(bm.array[i,,j]) & !is.na(bm.array[i+1,,j]),bm.array[i,,j] - bm.array[i+1,,j],NA) # subtracting the previous year's growth from DBH to get that year's DBH
}
}
bm.increment[1:3,,] <- NA
min(bm.increment, na.rm=T)
head(bm.increment)
biom.inc.mean <- apply(bm.increment[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.ci <- apply(bm.increment[,,], c(1,2), sd) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.mean <- as.data.frame(biom.inc.mean)
names(biom.inc.mean)<- c("VLA", "VLB", "VUA", "VUB")
summary(biom.inc.mean)
biom.inc.ci <-as.data.frame(biom.inc.ci)
names(biom.inc.ci)<- c("VLA.ci", "VLB.ci", "VUA.ci", "VUB.ci")
summary(biom.inc.ci)
biom.inc.valles <- as.data.frame(c(biom.inc.mean, biom.inc.ci))
row.names(biom.inc.valles) <- row.names(biom.inc.mean)
summary(biom.inc.valles)
head(biom.inc.valles)
save(biom.inc.valles, file="biom.valles_inc.csv")
biom.valles.inc.dens <- biom.inc.valles
biom.valles.inc.dens$VLA <- biom.valles.inc.dens$VLA /144/1000 #*0.59
biom.valles.inc.dens$VLA.ci <- biom.valles.inc.dens$VLA.ci /144/1000
biom.valles.inc.dens$VLB <- biom.valles.inc.dens$VLB /624/1000 # *0.09
biom.valles.inc.dens$VLB.ci <- biom.valles.inc.dens$VLB.ci /624/1000
biom.valles.inc.dens$VUA <- biom.valles.inc.dens$VUA /576/1000 #0.11
biom.valles.inc.dens$VUA.ci <- biom.valles.inc.dens$VUA.ci /576/1000
biom.valles.inc.dens$VUB <- biom.valles.inc.dens$VUB /576/1000 #0.19
biom.valles.inc.dens$VUB.ci <- biom.valles.inc.dens$VUB.ci /576/1000
summary(biom.valles.inc.dens)
#now in kilograms of biomass increment per plot
save(biom.valles.inc.dens, file="valles_bm_inc_m2.csv")
# Expository graphs for valles caldera
valles.plot<- ggplot()  +
# plotting total site basal area
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pipo.mean - 1.96*nt.pipo.ci, ymax=nt.pipo.mean + 1.96*nt.pipo.ci), alpha=0.15, fill="red")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.piaz.mean - 1.96*nt.piaz.ci, ymax=nt.piaz.mean + 1.96*nt.piaz.ci), alpha=0.15, fill="orange")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.spp.mean - 1.96*nt.pine.spp.ci, ymax=nt.pine.spp.mean + 1.96*nt.pine.spp.ci), alpha=0.15, fill="green")+
#geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.vcnp.mean - 1.96*nt.vcnp.ci, ymax=nt.vcnp.mean + 1.96*nt.vcnp.ci), alpha=0.15, fill="purple")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.dom.mean - 1.96*nt.pine.dom.ci, ymax=nt.pine.dom.mean + 1.96*nt.pine.dom.ci), alpha=0.15, fill="blue")+
geom_line(data=vlf.year,  aes(x=year, y=nt.pipo.mean), size=1.5, colour="red") +
geom_line(data= vlf.year, aes(x=year, y=nt.piaz.mean), size=1.5, colour="orange") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.spp.mean), size=1.5,colour="green") +
#geom_line(data= vlf.year, aes(x=year, y=nt.vcnp.mean), size=1.5,colour="purple") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.dom.mean), size=1.5,colour="blue") +
geom_line(data= vlf.bm.avg.gf, aes(x=year, y=jenkins.pine), size=1.5,colour="black") +
biom.mean <- apply(bm.array[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.ci <- apply(bm.array[,,], c(1,2), quantile, c(0.025, 0.975)) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
# biom.se <- apply(bm.array[,,], c(1,2), se)
biom.mean <- as.data.frame(biom.mean)
names(biom.mean)<- paste(plots, , c("70%", "82%", "82%", "90%")"Dated", sep=".")
biom.lbound <- data.frame(biom.ci[1,,])
names(biom.lbound) <- paste(plots, "LB", c(), "Dated", sep=".")
biom.ubound <- data.frame(biom.ci[2,,])
names(biom.ubound) <- paste(plots, "UB", "Dated", sep=".")
# biom.ci <-as.data.frame(biom.ci)
# names(biom.ci)<- c(paste(plots, "sd", sep="."))
# biom.se <-as.data.frame(biom.se)
# names(biom.se)<- c(paste(plots, "se", sep="."))
biom.valles.dated <- as.data.frame(c(biom.mean, biom.lbound, biom.ubound))
row.names(biom.valles.dated) <- row.names(biom.mean)
summary(biom.valles.dated)
head(biom.valles.dated)
save(biom.valles.dated, file="valles_bm_recon_Dated_only.Rdata")
#save(biom.valles.dated, file="biom.valles.dated_cum.csv")
#---------------------------------------------------------------------
# This we did in a loop above to make it mroe flexible for the future
# (and we did it right this time)
#---------------------------------------------------------------------
# biom.valles.dated.cum.dens <- biom.valles.dated
#
# biom.valles.dated.cum.dens$VLA <- biom.valles.dated.cum.dens$VLA / 144/1000
# biom.valles.dated.cum.dens$VLA.ci <- biom.valles.dated.cum.dens$VLA.ci /144/1000
# biom.valles.dated.cum.dens$VLA.se <- biom.valles.dated.cum.dens$VLA.se /144/1000
#
# biom.valles.dated.cum.dens$VLB <- biom.valles.dated.cum.dens$VLB /624/1000
# biom.valles.dated.cum.dens$VLB.ci <- biom.valles.dated.cum.dens$VLB.ci /624/1000
# biom.valles.dated.cum.dens$VLB.se <- biom.valles.dated.cum.dens$VLB.se /624/1000
#
# biom.valles.dated.cum.dens$VUA <- biom.valles.dated.cum.dens$VUA /576/1000
# biom.valles.dated.cum.dens$VUA.ci <- biom.valles.dated.cum.dens$VUA.ci /576/1000
# biom.valles.dated.cum.dens$VUA.se <- biom.valles.dated.cum.dens$VUA.se /576/1000
#
# biom.valles.dated.cum.dens$VUB <- biom.valles.dated.cum.dens$VUB /576/1000
# biom.valles.dated.cum.dens$VUB.ci <- biom.valles.dated.cum.dens$VUB.ci /576/1000
# biom.valles.dated.cum.dens$VUB.se <- biom.valles.dated.cum.dens$VUB.se /576/1000
#
# summary(biom.valles.dated.cum.dens)
# biom.valles.dated.cum.dens$year <- as.factor(row.names(biom.valles.dated.cum.dens))
# head(biom.valles.dated.cum.dens)
# now we have biomass per m^2 for each plot with SD
#---------------------------------------------------------------------
#save(biom.valles.dated.cum.dens, file="biom_valles_dum_m2.csv")
biom.valles.dated.stack <- stack(biom.valles.dated[1:4])
names(biom.valles.dated.stack) <- c("Biom.Mean", "PlotID")
biom.valles.dated.stack$Year <- as.numeric(paste(row.names(biom.valles.dated)))
biom.valles.dated.stack$Plot <- as.factor(substr(biom.valles.dated.stack$PlotID, 3,3))
biom.valles.dated.stack$Site <- as.factor(substr(biom.valles.dated.stack$PlotID, 1,2))
summary(biom.valles.dated.stack)
biom.valles.dated.stack.lb <- stack(biom.valles.dated[5:8])
names(biom.valles.dated.stack.lb) <- c("Biom.LB", "PlotID")
biom.valles.dated.stack.ub <- stack(biom.valles.dated[9:12])
names(biom.valles.dated.stack.ub) <- c("Biom.UB", "PlotID")
biom.valles.dated.stack$Biom.LB <- biom.valles.dated.stack.lb[,1]
biom.valles.dated.stack$Biom.UB <- biom.valles.dated.stack.ub[,1]
summary(biom.valles.dated.stack)
# biom.valles.stack$Ribbon.max <- biom.valles.stack$Biom.Mean + biom.valles.stack$Biom.ci
# biom.valles.stack$Ribbon.min <- biom.valles.stack$Biom.Mean - biom.valles.stack$Biom.ci
# biom.valles.stack$Ribbon.min <- ifelse(biom.valles.stack$Ribbon.min < 0, 0, biom.valles.stack$Ribbon.min)
# biom.valles.stack$Ribbon.max <- ifelse(biom.valles.stack$Ribbon.max > 100, 100, biom.valles.stack$Ribbon.max)
summary(biom.valles.dated.stack)
save(biom.valles.dated.stack, file="valles_bm_recon_stack_DatedONLY.Rdata")
load("valles_bm_recon_stack.Rdata")
valles.composite.stack <- rbind(biom.valles.dated.stack, biom.valles.stack)
summary(valles.composite.stack)
library(ggplot2)
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$Site=="VL"),])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID)) +
ggtitle("Valles Caldera Lower (PIPO)")
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$Site=="VU"),])  + facet_grid(Plot ~ Site) +
#ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$PlotID=="VUB"),])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID)) +
ggtitle("Valles Caldera Upper (MCON)")
# valles.cum.plot<-
#pdf("Valles_Biomass_19March_Christy_ChojnackyOnly.pdf", height=8.5, width=11)
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012,])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID))
#   theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12))+
#   scale_fill_discrete(name="Model", labels = c("nt.pipo.mean", "nt.piaz.mean", "nt.pine.spp", "nt.vcnp.mean", "nt.pine.dom.mean")))
# dev.off()
# need to get the biomass increment of each year for the plots
# get the increment from the 3D array previously made
bm.array
bm.increment <- bm.array
bm.increment[1:3,,] <- NA
dim(bm.array)[3]
for(j in 1:dim(bm.increment)[3]){
# inserting oldest biomass
bm.increment[nrow(bm.increment),,j] <- bm.array[nrow(bm.increment),,j]
for(i in (nrow(bm.increment)-1):1){
bm.increment[i,,j] <- ifelse(!is.na(bm.array[i,,j]) & !is.na(bm.array[i+1,,j]),bm.array[i,,j] - bm.array[i+1,,j],NA) # subtracting the previous year's growth from DBH to get that year's DBH
}
}
bm.increment[1:3,,] <- NA
min(bm.increment, na.rm=T)
head(bm.increment)
biom.inc.mean <- apply(bm.increment[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.ci <- apply(bm.increment[,,], c(1,2), sd) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.mean <- as.data.frame(biom.inc.mean)
names(biom.inc.mean)<- c("VLA", "VLB", "VUA", "VUB")
summary(biom.inc.mean)
biom.inc.ci <-as.data.frame(biom.inc.ci)
names(biom.inc.ci)<- c("VLA.ci", "VLB.ci", "VUA.ci", "VUB.ci")
summary(biom.inc.ci)
biom.inc.valles <- as.data.frame(c(biom.inc.mean, biom.inc.ci))
row.names(biom.inc.valles) <- row.names(biom.inc.mean)
summary(biom.inc.valles)
head(biom.inc.valles)
save(biom.inc.valles, file="biom.valles_inc.csv")
biom.valles.inc.dens <- biom.inc.valles
biom.valles.inc.dens$VLA <- biom.valles.inc.dens$VLA /144/1000 #*0.59
biom.valles.inc.dens$VLA.ci <- biom.valles.inc.dens$VLA.ci /144/1000
biom.valles.inc.dens$VLB <- biom.valles.inc.dens$VLB /624/1000 # *0.09
biom.valles.inc.dens$VLB.ci <- biom.valles.inc.dens$VLB.ci /624/1000
biom.valles.inc.dens$VUA <- biom.valles.inc.dens$VUA /576/1000 #0.11
biom.valles.inc.dens$VUA.ci <- biom.valles.inc.dens$VUA.ci /576/1000
biom.valles.inc.dens$VUB <- biom.valles.inc.dens$VUB /576/1000 #0.19
biom.valles.inc.dens$VUB.ci <- biom.valles.inc.dens$VUB.ci /576/1000
summary(biom.valles.inc.dens)
#now in kilograms of biomass increment per plot
save(biom.valles.inc.dens, file="valles_bm_inc_m2.csv")
# Expository graphs for valles caldera
valles.plot<- ggplot()  +
# plotting total site basal area
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pipo.mean - 1.96*nt.pipo.ci, ymax=nt.pipo.mean + 1.96*nt.pipo.ci), alpha=0.15, fill="red")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.piaz.mean - 1.96*nt.piaz.ci, ymax=nt.piaz.mean + 1.96*nt.piaz.ci), alpha=0.15, fill="orange")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.spp.mean - 1.96*nt.pine.spp.ci, ymax=nt.pine.spp.mean + 1.96*nt.pine.spp.ci), alpha=0.15, fill="green")+
#geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.vcnp.mean - 1.96*nt.vcnp.ci, ymax=nt.vcnp.mean + 1.96*nt.vcnp.ci), alpha=0.15, fill="purple")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.dom.mean - 1.96*nt.pine.dom.ci, ymax=nt.pine.dom.mean + 1.96*nt.pine.dom.ci), alpha=0.15, fill="blue")+
geom_line(data=vlf.year,  aes(x=year, y=nt.pipo.mean), size=1.5, colour="red") +
geom_line(data= vlf.year, aes(x=year, y=nt.piaz.mean), size=1.5, colour="orange") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.spp.mean), size=1.5,colour="green") +
#geom_line(data= vlf.year, aes(x=year, y=nt.vcnp.mean), size=1.5,colour="purple") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.dom.mean), size=1.5,colour="blue") +
geom_line(data= vlf.bm.avg.gf, aes(x=year, y=jenkins.pine), size=1.5,colour="black") +
biom.mean <- apply(bm.array[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.ci <- apply(bm.array[,,], c(1,2), quantile, c(0.025, 0.975)) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
# biom.se <- apply(bm.array[,,], c(1,2), se)
biom.mean <- as.data.frame(biom.mean)
biom.mean <- apply(bm.array[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.ci <- apply(bm.array[,,], c(1,2), quantile, c(0.025, 0.975)) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
# biom.se <- apply(bm.array[,,], c(1,2), se)
biom.mean <- as.data.frame(biom.mean)
names(biom.mean)<- paste(plots, , c("70%", "82%", "82%", "90%"),"Dated", sep=".")
names(biom.mean)<- paste(plots, c("70%", "82%", "82%", "90%"),"Dated", sep=".")
biom.lbound <- data.frame(biom.ci[1,,])
names(biom.lbound) <- paste(plots, "LB", c(), "Dated", sep=".")
biom.ubound <- data.frame(biom.ci[2,,])
names(biom.ubound) <- paste(plots, "UB", "Dated", sep=".")
# biom.ci <-as.data.frame(biom.ci)
# names(biom.ci)<- c(paste(plots, "sd", sep="."))
# biom.se <-as.data.frame(biom.se)
# names(biom.se)<- c(paste(plots, "se", sep="."))
biom.valles.dated <- as.data.frame(c(biom.mean, biom.lbound, biom.ubound))
row.names(biom.valles.dated) <- row.names(biom.mean)
summary(biom.valles.dated)
head(biom.valles.dated)
save(biom.valles.dated, file="valles_bm_recon_Dated_only.Rdata")
#save(biom.valles.dated, file="biom.valles.dated_cum.csv")
#---------------------------------------------------------------------
# This we did in a loop above to make it mroe flexible for the future
# (and we did it right this time)
#---------------------------------------------------------------------
# biom.valles.dated.cum.dens <- biom.valles.dated
#
# biom.valles.dated.cum.dens$VLA <- biom.valles.dated.cum.dens$VLA / 144/1000
# biom.valles.dated.cum.dens$VLA.ci <- biom.valles.dated.cum.dens$VLA.ci /144/1000
# biom.valles.dated.cum.dens$VLA.se <- biom.valles.dated.cum.dens$VLA.se /144/1000
#
# biom.valles.dated.cum.dens$VLB <- biom.valles.dated.cum.dens$VLB /624/1000
# biom.valles.dated.cum.dens$VLB.ci <- biom.valles.dated.cum.dens$VLB.ci /624/1000
# biom.valles.dated.cum.dens$VLB.se <- biom.valles.dated.cum.dens$VLB.se /624/1000
#
# biom.valles.dated.cum.dens$VUA <- biom.valles.dated.cum.dens$VUA /576/1000
# biom.valles.dated.cum.dens$VUA.ci <- biom.valles.dated.cum.dens$VUA.ci /576/1000
# biom.valles.dated.cum.dens$VUA.se <- biom.valles.dated.cum.dens$VUA.se /576/1000
#
# biom.valles.dated.cum.dens$VUB <- biom.valles.dated.cum.dens$VUB /576/1000
# biom.valles.dated.cum.dens$VUB.ci <- biom.valles.dated.cum.dens$VUB.ci /576/1000
# biom.valles.dated.cum.dens$VUB.se <- biom.valles.dated.cum.dens$VUB.se /576/1000
#
# summary(biom.valles.dated.cum.dens)
# biom.valles.dated.cum.dens$year <- as.factor(row.names(biom.valles.dated.cum.dens))
# head(biom.valles.dated.cum.dens)
# now we have biomass per m^2 for each plot with SD
#---------------------------------------------------------------------
#save(biom.valles.dated.cum.dens, file="biom_valles_dum_m2.csv")
biom.valles.dated.stack <- stack(biom.valles.dated[1:4])
names(biom.valles.dated.stack) <- c("Biom.Mean", "PlotID")
biom.valles.dated.stack$Year <- as.numeric(paste(row.names(biom.valles.dated)))
biom.valles.dated.stack$Plot <- as.factor(substr(biom.valles.dated.stack$PlotID, 3,3))
biom.valles.dated.stack$Site <- as.factor(substr(biom.valles.dated.stack$PlotID, 1,2))
summary(biom.valles.dated.stack)
biom.valles.dated.stack.lb <- stack(biom.valles.dated[5:8])
names(biom.valles.dated.stack.lb) <- c("Biom.LB", "PlotID")
biom.valles.dated.stack.ub <- stack(biom.valles.dated[9:12])
names(biom.valles.dated.stack.ub) <- c("Biom.UB", "PlotID")
biom.valles.dated.stack$Biom.LB <- biom.valles.dated.stack.lb[,1]
biom.valles.dated.stack$Biom.UB <- biom.valles.dated.stack.ub[,1]
summary(biom.valles.dated.stack)
# biom.valles.stack$Ribbon.max <- biom.valles.stack$Biom.Mean + biom.valles.stack$Biom.ci
# biom.valles.stack$Ribbon.min <- biom.valles.stack$Biom.Mean - biom.valles.stack$Biom.ci
# biom.valles.stack$Ribbon.min <- ifelse(biom.valles.stack$Ribbon.min < 0, 0, biom.valles.stack$Ribbon.min)
# biom.valles.stack$Ribbon.max <- ifelse(biom.valles.stack$Ribbon.max > 100, 100, biom.valles.stack$Ribbon.max)
summary(biom.valles.dated.stack)
save(biom.valles.dated.stack, file="valles_bm_recon_stack_DatedONLY.Rdata")
load("valles_bm_recon_stack.Rdata")
valles.composite.stack <- rbind(biom.valles.dated.stack, biom.valles.stack)
summary(valles.composite.stack)
library(ggplot2)
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$Site=="VL"),])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID)) +
ggtitle("Valles Caldera Lower (PIPO)")
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$Site=="VU"),])  + facet_grid(Plot ~ Site) +
#ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012 & (valles.composite.stack$PlotID=="VUB"),])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID)) +
ggtitle("Valles Caldera Upper (MCON)")
# valles.cum.plot<-
#pdf("Valles_Biomass_19March_Christy_ChojnackyOnly.pdf", height=8.5, width=11)
ggplot(data=valles.composite.stack[valles.composite.stack$Year<2012,])  + facet_grid(Plot ~ Site) +
# plotting total site basal area
geom_ribbon(aes(x=Year, ymin=Biom.LB, ymax=Biom.UB, fill=PlotID), alpha=0.5) +
geom_line(aes(x=Year, y=Biom.Mean, color=PlotID))
#   theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12))+
#   scale_fill_discrete(name="Model", labels = c("nt.pipo.mean", "nt.piaz.mean", "nt.pine.spp", "nt.vcnp.mean", "nt.pine.dom.mean")))
# dev.off()
# need to get the biomass increment of each year for the plots
# get the increment from the 3D array previously made
bm.array
bm.increment <- bm.array
bm.increment[1:3,,] <- NA
dim(bm.array)[3]
for(j in 1:dim(bm.increment)[3]){
# inserting oldest biomass
bm.increment[nrow(bm.increment),,j] <- bm.array[nrow(bm.increment),,j]
for(i in (nrow(bm.increment)-1):1){
bm.increment[i,,j] <- ifelse(!is.na(bm.array[i,,j]) & !is.na(bm.array[i+1,,j]),bm.array[i,,j] - bm.array[i+1,,j],NA) # subtracting the previous year's growth from DBH to get that year's DBH
}
}
bm.increment[1:3,,] <- NA
min(bm.increment, na.rm=T)
head(bm.increment)
biom.inc.mean <- apply(bm.increment[,,], c(1,2), mean) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.ci <- apply(bm.increment[,,], c(1,2), sd) # bm.array==the array you're working with, 3 = do the funciton to the layers (3rd dim), mean = the function you're running
biom.inc.mean <- as.data.frame(biom.inc.mean)
names(biom.inc.mean)<- c("VLA", "VLB", "VUA", "VUB")
summary(biom.inc.mean)
biom.inc.ci <-as.data.frame(biom.inc.ci)
names(biom.inc.ci)<- c("VLA.ci", "VLB.ci", "VUA.ci", "VUB.ci")
summary(biom.inc.ci)
biom.inc.valles <- as.data.frame(c(biom.inc.mean, biom.inc.ci))
row.names(biom.inc.valles) <- row.names(biom.inc.mean)
summary(biom.inc.valles)
head(biom.inc.valles)
save(biom.inc.valles, file="biom.valles_inc.csv")
biom.valles.inc.dens <- biom.inc.valles
biom.valles.inc.dens$VLA <- biom.valles.inc.dens$VLA /144/1000 #*0.59
biom.valles.inc.dens$VLA.ci <- biom.valles.inc.dens$VLA.ci /144/1000
biom.valles.inc.dens$VLB <- biom.valles.inc.dens$VLB /624/1000 # *0.09
biom.valles.inc.dens$VLB.ci <- biom.valles.inc.dens$VLB.ci /624/1000
biom.valles.inc.dens$VUA <- biom.valles.inc.dens$VUA /576/1000 #0.11
biom.valles.inc.dens$VUA.ci <- biom.valles.inc.dens$VUA.ci /576/1000
biom.valles.inc.dens$VUB <- biom.valles.inc.dens$VUB /576/1000 #0.19
biom.valles.inc.dens$VUB.ci <- biom.valles.inc.dens$VUB.ci /576/1000
summary(biom.valles.inc.dens)
#now in kilograms of biomass increment per plot
save(biom.valles.inc.dens, file="valles_bm_inc_m2.csv")
# Expository graphs for valles caldera
valles.plot<- ggplot()  +
# plotting total site basal area
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pipo.mean - 1.96*nt.pipo.ci, ymax=nt.pipo.mean + 1.96*nt.pipo.ci), alpha=0.15, fill="red")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.piaz.mean - 1.96*nt.piaz.ci, ymax=nt.piaz.mean + 1.96*nt.piaz.ci), alpha=0.15, fill="orange")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.spp.mean - 1.96*nt.pine.spp.ci, ymax=nt.pine.spp.mean + 1.96*nt.pine.spp.ci), alpha=0.15, fill="green")+
#geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.vcnp.mean - 1.96*nt.vcnp.ci, ymax=nt.vcnp.mean + 1.96*nt.vcnp.ci), alpha=0.15, fill="purple")+
geom_ribbon(data=vlf.year, aes(x=year, ymin=nt.pine.dom.mean - 1.96*nt.pine.dom.ci, ymax=nt.pine.dom.mean + 1.96*nt.pine.dom.ci), alpha=0.15, fill="blue")+
geom_line(data=vlf.year,  aes(x=year, y=nt.pipo.mean), size=1.5, colour="red") +
geom_line(data= vlf.year, aes(x=year, y=nt.piaz.mean), size=1.5, colour="orange") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.spp.mean), size=1.5,colour="green") +
#geom_line(data= vlf.year, aes(x=year, y=nt.vcnp.mean), size=1.5,colour="purple") +
geom_line(data= vlf.year, aes(x=year, y=nt.pine.dom.mean), size=1.5,colour="blue") +
geom_line(data= vlf.bm.avg.gf, aes(x=year, y=jenkins.pine), size=1.5,colour="black") +
