ls()
pipo.allom <-load("Allom.PIPO.2.Rdata")
pipo.allom <-load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries")
pipo.allom <-load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.PIPO.2.Rdata")
ls()
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.PIPO.2.Rdata")
ls()
pipo.allom <- allom
pipo.mc <- mc
test <- pipo.mc[sample(1:nrow(pipo.mc), size=10, replace=T),]
test <- sample(1:nrow(pipo.mc), size=10, replace=T)
test <- sample(pipo.mc[1:nrow(pipo.mc),], size=10, replace=T)
test <- sample(pipo.mc, size=10, replace=T)
save.csv(pipo.mc, "pipo.mc.csv")
save(pipo.mc, "pipo.mc.csv")
save("pipo.mc.csv", pipo.mc)
save(pipo.mc, file="pipo_mc.csv")
save(pipo.mc[[1]], file="pipo_mc.csv")
save(pipo.mc[1], file="pipo_mc.csv")
save(pipo.mc[1:5000,1:15], file="pipo_mc.csv")
pipo.mc
test <- sample(pipo.mc[1:nrow(pipo.mc),], size=10, replace=T)
test <- sample(pipo.mc[,1:nrow(pipo.mc)], size=10, replace=T)
test <- sample(pipo.mc[1:nrow(pipo.mc)], size=10, replace=T)
test <- sample(pipo.mc[,], size=10, replace=T)
test <- sample(pipo.mc[1,], size=10, replace=T)
head(pipo.mc)
summary(pipo.mc)
test <- sample(pipo.mc[[1]], size=10, replace=T)
summary(test)
test
test <- sample(pipo.mc[[1],], size=10, replace=T)
test <- sample(pipo.mc[1[1:nrow(pipo.mc[[1]]),],], size=10, replace=T)
test <- sample(pipo.mc[[3]][1:nrow(pipo.mc[[3]]),], size=10, replace=T)
summary(test)
summary(test)
test
pipo.mc[[3]][1:10,]
test <- pipo.mc[[3]][sample(1:nrow(pipo.mc[[3]]), size=10, replace=T),]
summary(test)
test
allometries[["pipo"]] <- pipo.mc[[3]][sample(1:nrow(pipo.mc[[3]]), size=10, replace=T),]
allometries<- list()
allometries[["pipo"]] <- pipo.mc[[3]][sample(1:nrow(pipo.mc[[3]]), size=10, replace=T),]
summary(allometries)
ALLOM
allom
allometries<- list()
allometries[["pipo"]] <- pipo.mc[[3]][sample(1:nrow(pipo.mc[[3]]), size=50, replace=T),]
summary(allometries)
allometries[["psme"]] <- mc[[3]][sample(1:nrow(mc[[3]]), size=50, replace=T),]
summary(allometries)
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.ABCO.2.Rdata")
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.ABCO.2.Rdata")
allometries[["abco"]] <- mc[[3]][sample(1:nrow(mc[[3]]), size=50, replace=T),]
summary(allometries)
allometries[[abco]]
allometries[["abco"]]
allometries[["pipo"]]
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.PIEN.2.Rdata")
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.PICEA.2.Rdata")
allometries[["picea.sp"]] <- mc[[3]][sample(1:nrow(mc[[3]]), size=50, replace=T),]
summary(allometries)
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.PINUS.2.Rdata")
allometries[["pinus.sp"]] <- mc[[3]][sample(1:nrow(mc[[3]]), size=50, replace=T),]
summary(allometries)
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.ABIES.2.Rdata")
allometries[["abies.sp"]] <- mc[[3]][sample(1:nrow(mc[[3]]), size=50, replace=T),]
summary(allometries)
load("/Users/mrossalexander/Desktop/PEcAn_Allometries/Ross_allometries/Allom.PSEUD7.2.Rdata")
allometries[["doug.sp"]] <- mc[[3]][sample(1:nrow(mc[[3]]), size=50, replace=T),]
summary(allometries)
library(ggplot2)
marcy.pipo <- read.csv("raw input files/marcy_ppine_2013.csv", header=T)
marcy.mcon <- read.csv("raw input files/marcy_mcon_2012.csv", header=T)
ross.trees <- read.csv("raw input files/tree_metadata_DOE_plus_valles.csv", na.strings=c("", "NA", "#VALUE!", "*"),header=T)
summary(ross.trees)
ross.valles <- ross.trees[substr(ross.trees$PlotID,1,1)=="V",]
summary(ross.valles)
ross.valles<- ross.valles[,c("TreeID", "PlotID", "Species","DBH..cm.", "Density..stems.ha.")]
names(ross.valles)<- c("tree.id", "plot.id", "species", "dbh", "density")
summary(ross.valles)
ross.mcon <- ross.valles[substr(ross.valles$plot.id,1,2)=="VU",]
ross.pipo <- ross.valles[substr(ross.valles$plot.id,1,2)=="VL",]
ross.mcon <- ross.valles[substr(ross.valles$plot.id,1,2)=="VU",]
summary(ross.pipo)
summary(ross.mcon)
summary(ross.valles)
ross.valles$site<- as.factor(substr(ross.valles$plot.id, 1, 2))
summary(ross.valles)
summary(marcy.pipo)
marcy.pipo$density <- length(marcy.pipo$Plot_Name)
summary(marcy.pipo)
View(marcy.pipo)
marcy.pipo$density <- nrow(marcy.pipo$Plot_Name)
View(ross.pipo)
View(marcy.pipo)
marcy.pipo$density <- NA
summary(marcy.pipo)
for i in marcy.pipo$density{
length(marcy.pipo[marcy.pipo$PlotID==unique(marcy.pipo$Plot_Name))/pi*10^2
}
for i in marcy.pipo$density{
length(marcy.pipo[marcy.pipo$PlotID==unique(marcy.pipo$Plot_Name))]/pi*10^2
}
for i in marcy.pipo$density{
length(marcy.pipo[marcy.pipo$PlotID==unique(marcy.pipo$Plot_Name)])/pi*10^2
}
length(marcy.pipo[marcy.pipo$PlotID==unique(marcy.pipo$Plot_Name)])/pi*10^2
length(marcy.pipo[marcy.pipo$PlotID==unique(marcy.pipo$Plot_Name)])
unique(marcy.pipo$Plot_Name)
for i in marcy.pipo$density{
length(marcy.pipo[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])/pi*10^2
}
length(marcy.pipo[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])
length(marcy.pipo[,marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])
length(marcy.pipo[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name),])
summary(marcy.pipo)
unique(marcy.pipo$Plot_Name)
length(marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name))
ength(unique(marcy.pipo$Plot_Name))
length(unique(marcy.pipo$Plot_Name))
length(marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name))
length(marcy.pipo[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name), marcy.pipo$Tree_Tag_Number])
length(marcy.pipo[marcy.pipo$Tree_Tag_Number, marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])
View(marcy.pipo)
length(marcy.pipo$Tree_Tag_Number[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])/pi*10^2
length(marcy.pipo$Tree_Tag_Number[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])
View(ross.trees)
length(marcy.pipo$Tree_Tag_Number[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])==i/pi*10^2
for i in marcy.pipo$density{
length(marcy.pipo$Tree_Tag_Number[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])==i/pi*10^2
}
length(marcy.pipo$Tree_Tag_Number[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])
i==length(marcy.pipo$Tree_Tag_Number[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])/pi*10^2
length(marcy.pipo$Tree_Tag_Number[marcy.pipo$Plot_Name==unique(marcy.pipo$Plot_Name)])/pi*10^2
for(i in unique(marcy.pipo$Plot_Name)){
marcy.pipo$density <- nrow(marcy.pipo[marcy.pipo$Plot_Name==i,])/pi*10^2
}
summary(marcy.pipo)
for(i in unique(marcy.pipo$Plot_Name)){
marcy.pipo$density <- nrow(marcy.pipo[marcy.pipo$Plot_Name==i,])/(pi*10^2)
}
summary(marcy.pipo)
i
unique(marcy.pipo$Plot_Name)
nrow(marcy.pipo[marcy.pipo$Plot_Name==i,])
i=3
nrow(marcy.pipo[marcy.pipo$Plot_Name==i,])
for(i in unique(marcy.pipo$Plot_Name)){
marcy.pipo[marcy.pipo$Plot_Name==i,"density"] <- nrow(marcy.pipo[marcy.pipo$Plot_Name==i,])/(pi*10^2)
}
summary(marcy.pipo)
for(i in unique(marcy.mcon$Plot_Name)){
marcy.mcon[marcy.mcon$Plot_Name==i,"density"] <- nrow(marcy.mcon[marcy.mcon$Plot_Name==i,])/(pi*10^2)
}
summary(marcy.mcon)
marcy.valles<- merge(marcy.pipo, marcy.mcon, all.x=T, all.y=T)
summary(marcy.valles)
marcy.valles <- marcy.valles[,c("Site", "Tree_Tag_Number","Species", "DBH_1", "density")]
summary(marcy.valles)
names(marcy.valles)<- c("site", "tree.id", "species", "dbh", "density")
marcy.pipo$density <- 1/(pi*marcy.pipo$Plot_Radius^2)
summary(marcy.pipo)
marcy.mcon$density <- 1/(pi*marcy.mcon$Plot_Radius^2)
summary(marcy.mcon)
marcy.valles<- merge(marcy.pipo, marcy.mcon, all.x=T, all.y=T)
summary(marcy.valles)
marcy.valles <- marcy.valles[,c("Site", "Tree_Tag_Number","Species", "DBH_1", "density")]
summary(marcy.valles)
marcy.valles<- merge(marcy.pipo, marcy.mcon, all.x=T, all.y=T)
summary(marcy.valles)
marcy.valles <- marcy.valles[,c("Site","Plot_Name", "Tree_Tag_Number","Species", "DBH_1", "density")]
summary(marcy.valles)
names(marcy.valles)<- c("site", "plot.id", "tree.id", "species", "dbh", "density")
summary(marcy.valles)
all.valles<-merge(marcy.valles, ross.valles, all.x=T, all.y=T)
summary(all.valles)
marcy.pipo$density <- 1/(pi*marcy.pipo$Plot_Radius^2)*1e-5
summary(marcy.pipo)
marcy.pipo$density <- 1/(pi*marcy.pipo$Plot_Radius^2)/1e-4
summary(marcy.pipo)
marcy.mcon$density <- 1/(pi*marcy.mcon$Plot_Radius^2)/1e-4
summary(marcy.mcon)
marcy.valles<- merge(marcy.pipo, marcy.mcon, all.x=T, all.y=T)
summary(marcy.valles)
marcy.valles <- marcy.valles[,c("Site","Plot_Name", "Tree_Tag_Number","Species", "DBH_1", "density")]
summary(marcy.valles)
names(marcy.valles)<- c("site", "plot.id", "tree.id", "species", "dbh", "density")
summary(marcy.valles)
all.valles<-merge(marcy.valles, ross.valles, all.x=T, all.y=T)
summary(all.valles)
all.valles$site<- ifelse(substr(all.valles$site, 1, 2)=="VL", "ross.ppine",
ifelse(substr(all.valles$site,1,2)=="VU", "ross.mcon",
summary(all.valles)
summary(all.valles)
all.valles$site<- ifelse(substr(all.valles$site, 1, 2)=="VL", "ross.ppine",
ifelse(substr(all.valles$site,1,2)=="VU", "ross.mcon",
ifelse(all.valles$site=="PPINE", "marcy.ppine", "marcy.mcon")))
all.valles$site<-as.factor(all.valles$site)
summary(all.valles)
dbh.bins1 <- seq(0, max(all.valles$dbh, na.rm=T), 2)
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
levels(all.valles$site)
levels(all.valles$site) <- c("mcon.marcy", "ppine.marcy", "mcon.ross", "ppine.ross")
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
levels(all.valles$site)
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(. ~ site)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
all.valles$site<- ifelse(substr(all.valles$site, 1, 2)=="VL", "ppine.ross",
ifelse(substr(all.valles$site,1,2)=="VU", "mcon.ross",
ifelse(all.valles$site=="PPINE", "ppine.marcy", "mcon.ross")))
all.valles$site<-as.factor(all.valles$site)
summary(all.valles)
dbh.bins1 <- seq(0, max(all.valles$dbh, na.rm=T), 2)
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
summary(all.valles)
all.valles$site<- ifelse(substr(all.valles$site, 1, 2)=="VL", "ppine.ross",
ifelse(substr(all.valles$site,1,2)=="VU", "mcon.ross",
ifelse(all.valles$site=="PPINE", "ppine.marcy", "mcon.marcy")))
all.valles$site<-as.factor(all.valles$site)
summary(all.valles)
library(ggplot2)
# exploratory analysis of Marcy Litvak's Valles Caldera Data
marcy.pipo <- read.csv("raw input files/marcy_ppine_2013.csv", header=T)
marcy.mcon <- read.csv("raw input files/marcy_mcon_2012.csv", header=T)
ross.trees <- read.csv("raw input files/tree_metadata_DOE_plus_valles.csv", na.strings=c("", "NA", "#VALUE!", "*"),header=T)
# subsetting only the valles trees from the overall trees list
summary(ross.trees)
ross.valles <- ross.trees[substr(ross.trees$PlotID,1,1)=="V",]
summary(ross.valles)
# reducing the number of columns in the data frame
ross.valles<- ross.valles[,c("TreeID", "PlotID", "Species","DBH..cm.", "Density..stems.ha.")]
names(ross.valles)<- c("tree.id", "plot.id", "species", "dbh", "density")
summary(ross.valles)
# settign site as a factor
ross.valles$site<- as.factor(substr(ross.valles$plot.id, 1, 2))
summary(ross.valles)
ross.pipo <- ross.valles[substr(ross.valles$plot.id,1,2)=="VL",]
ross.mcon <- ross.valles[substr(ross.valles$plot.id,1,2)=="VU",]
summary(ross.pipo)
summary(ross.mcon)
# Calculating density per plot for Marcy's data; she used 10m plots
summary(marcy.pipo)
marcy.pipo$density <- 1/(pi*marcy.pipo$Plot_Radius^2)/1e-4
summary(marcy.pipo)
marcy.mcon$density <- 1/(pi*marcy.mcon$Plot_Radius^2)/1e-4
summary(marcy.mcon)
#now density is in trees per hectare to match what christy calculated in the DOE spreadsheets.
marcy.valles<- merge(marcy.pipo, marcy.mcon, all.x=T, all.y=T)
summary(marcy.valles)
marcy.valles <- marcy.valles[,c("Site","Plot_Name", "Tree_Tag_Number","Species", "DBH_1", "density")]
summary(marcy.valles)
names(marcy.valles)<- c("site", "plot.id", "tree.id", "species", "dbh", "density")
summary(marcy.valles)
all.valles<-merge(marcy.valles, ross.valles, all.x=T, all.y=T)
summary(all.valles)
all.valles$site<- ifelse(substr(all.valles$site, 1, 2)=="VL", "ppine.ross",
ifelse(substr(all.valles$site,1,2)=="VU", "mcon.ross",
ifelse(all.valles$site=="PPINE", "ppine.marcy", "mcon.marcy")))
all.valles$site<-as.factor(all.valles$site)
summary(all.valles)
dbh.bins1 <- seq(0, max(all.valles$dbh, na.rm=T), 2)
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stem/Ha") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stem/Ha") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density/sum(density))+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
summary(all.valles)
valles.site <- aggregate(all.valles$density, by=list(all.valles$site), FUN=sum, na.rm=T)
valles.site
valles.plot <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id), FUN=sum, na.rm=T)
valles.plot
names(valles.plot) <- c("site", "plot.id", "density")
valles.plot
valles.site <- aggregate(valles.plot$density, by=list(all.valles$site), FUN=mean)
valles.site <- aggregate(valles.plot$density, by=list(valles.plot$site), FUN=mean)
valles.site
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id, all.valles$species), FUN=sum, na.rm=T)
valles.plot
summary(all.valles)
valles.plot2
valles.site2 <- aggregate(valles.plot$density, by=list(valles.plot$site, valles.plot$species), FUN=mean)
valles.site2 <- aggregate(valles.plot2$density, by=list(valles.plot2$site, valles.plot2$species), FUN=mean)
valles.site2
names(valles.plot2) <- c("site", "plot.id", "species", "density")
valles.plot2
valles.site2 <- aggregate(valles.plot2$density, by=list(valles.plot2$site, valles.plot2$species), FUN=mean)
valles.site2
names(valles.site2) <- c("site", "species", "density")
valles.site2
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$dbh, all.valles$site, all.valles$plot.id, all.valles$species), FUN=sum, na.rm=T)
summary(valles.plot2)
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id, all.valles$species, all.valles$dbh), FUN=sum, na.rm=T)
names(valles.plot2) <- c("site", "plot.id", "species", "dbh", "density")
summary(valles.plot2)
valles.site2 <- aggregate(valles.plot2$density, by=list(valles.plot2$site, valles.plot2$species, valles.plot2$dbh), FUN=mean)
valles.site2 <- aggregate(valles.plot2$density, by=list(valles.plot2$site, valles.plot2$species, valles.plot2$dbh), FUN=mean)
names(valles.site2) <- c("site", "species", "dbh", "density")
summary(valles.site2)
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
summary(all.valles)
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id, all.valles$species, dbh.bins1), FUN=sum, na.rm=T)
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id, all.valles$species, round(all.valles$dbh), 0), FUN=sum, na.rm=T)
names(valles.plot2) <- c("site", "plot.id", "species", "dbh", "density")
summary(valles.plot2)
all.valles$dbh.2 <- round(all.valles$dbh)
summary(all.valles)
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id, all.valles$species, all.valles$dbh2, FUN=sum, na.rm=T)
names(valles.plot2) <- c("site", "plot.id", "species", "dbh", "density")
summary(valles.plot2)
valles.site2 <- aggregate(valles.plot2$density, by=list(valles.plot2$site, valles.plot2$species, valles.plot2$dbh), FUN=mean)
names(valles.site2) <- c("site", "species", "dbh", "density")
summary(valles.site2)
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=density/sum(density))+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=1/sum(density))+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=density/sum(density))+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=sum(density))+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=1/sum(density))+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=sum(density)/density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
summary(valles.site2)
View(valles.site2)
valles.site
names(valles.site) <- c("site", "density")
valles.site
qplot(x=density, data=all.valles, geom="histogram", fill=site)
qplot(x=site, data=valles.site, geom="histogram", weight=density)
qplot(x=site, data=valles.site, geom="histogram", weight=density, fill=site)
valles.plot
qplot(x=site, data=valles.site, geom="histogram", weight=density, fill=site) +
qplot(x=site, data=valles.plot[valles.plot$plot.id=="VLB",], weight="density")
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density, fill=site))
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density))
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density))+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density; VLB overlay in black") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density))+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_discrete(name="Site")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density; VLB overlay in black") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density))+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_discrete(name="Site")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density; VLB overlay in black", font=bold) #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density))+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_discrete(name="Site")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density; VLB overlay in black") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
library(ggplot2)
# exploratory analysis of Marcy Litvak's Valles Caldera Data
marcy.pipo <- read.csv("raw input files/marcy_ppine_2013.csv", header=T)
marcy.mcon <- read.csv("raw input files/marcy_mcon_2012.csv", header=T)
ross.trees <- read.csv("raw input files/tree_metadata_DOE_plus_valles.csv", na.strings=c("", "NA", "#VALUE!", "*"),header=T)
# subsetting only the valles trees from the overall trees list
summary(ross.trees)
ross.valles <- ross.trees[substr(ross.trees$PlotID,1,1)=="V",]
summary(ross.valles)
# reducing the number of columns in the data frame
ross.valles<- ross.valles[,c("TreeID", "PlotID", "Species","DBH..cm.", "Density..stems.ha.")]
names(ross.valles)<- c("tree.id", "plot.id", "species", "dbh", "density")
summary(ross.valles)
# settign site as a factor
ross.valles$site<- as.factor(substr(ross.valles$plot.id, 1, 2))
summary(ross.valles)
ross.pipo <- ross.valles[substr(ross.valles$plot.id,1,2)=="VL",]
ross.mcon <- ross.valles[substr(ross.valles$plot.id,1,2)=="VU",]
summary(ross.pipo)
summary(ross.mcon)
# Calculating density per plot for Marcy's data; she used 10m plots
summary(marcy.pipo)
marcy.pipo$density <- 1/(pi*marcy.pipo$Plot_Radius^2)/1e-4
summary(marcy.pipo)
marcy.mcon$density <- 1/(pi*marcy.mcon$Plot_Radius^2)/1e-4
summary(marcy.mcon)
#now density is in trees per hectare to match what christy calculated in the DOE spreadsheets.
marcy.valles<- merge(marcy.pipo, marcy.mcon, all.x=T, all.y=T)
summary(marcy.valles)
marcy.valles <- marcy.valles[,c("Site","Plot_Name", "Tree_Tag_Number","Species", "DBH_1", "density")]
summary(marcy.valles)
names(marcy.valles)<- c("site", "plot.id", "tree.id", "species", "dbh", "density")
summary(marcy.valles)
all.valles<-merge(marcy.valles, ross.valles, all.x=T, all.y=T)
summary(all.valles)
all.valles$site<- ifelse(substr(all.valles$site, 1, 2)=="VL", "ppine.ross",
ifelse(substr(all.valles$site,1,2)=="VU", "mcon.ross",
ifelse(all.valles$site=="PPINE", "ppine.marcy", "mcon.marcy")))
all.valles$site<-as.factor(all.valles$site)
summary(all.valles)
dbh.bins1 <- seq(0, max(all.valles$dbh, na.rm=T), 2)
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems") + ggtitle("Size Distribution") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
qplot(x=dbh, data=all.valles, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
# -----------------------
# Ignoring species for a minute
valles.plot <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id), FUN=sum, na.rm=T)
names(valles.plot) <- c("site", "plot.id", "density")
valles.plot
valles.site <- aggregate(valles.plot$density, by=list(valles.plot$site), FUN=mean)
names(valles.site) <- c("site", "density")
valles.site
ggplot()+
geom_histogram(data=valles.site, aes(x=site, weight=density, fill=site)) +
geom_histogram(data=valles.plot[valles.plot$plot.id=="VLB",], aes(x=site, weight=density))+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_discrete(name="Site")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density; VLB overlay in black") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
# -----------------------
all.valles$dbh.2 <- round(all.valles$dbh)
summary(all.valles)
valles.plot2 <- aggregate(all.valles$density, by=list(all.valles$site, all.valles$plot.id, all.valles$species, all.valles$dbh2, FUN=sum, na.rm=T)
names(valles.plot2) <- c("site", "plot.id", "species", "dbh", "density")
summary(valles.plot2)
valles.site2 <- aggregate(valles.plot2$density, by=list(valles.plot2$site, valles.plot2$species, valles.plot2$dbh), FUN=mean)
names(valles.site2) <- c("site", "species", "dbh", "density")
summary(valles.site2)
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
summary(valles.site2)
qplot(x=dbh, data=valles.site2, geom="histogram", breaks=dbh.bins1, fill=species, weight=sum(density)/density)+
facet_grid(site ~ .)+
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH")+scale_y_continuous(name="Stems/ha") + ggtitle("Size Distribution weighted by Density") #+ scale_fill_manual(values=as.vector(spp.col.tree$Color))
test <- t.test(marcy.pipo$DBH_1, ross.pipo$dbh, na.rm=T)
summary(test)
test
install.packages("ggplot2")
