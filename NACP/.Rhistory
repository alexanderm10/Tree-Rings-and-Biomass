* log(dbh.recon.vlf.stack2$dbh))
dbh.recon.vlf.stack2$nt.piaz <- equations[equations$model=="n/t" & equations$spp=="piaz", "beta0"] * (dbh.recon.vlf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="piaz", "beta1"])
dbh.recon.vlf.stack2$nt.pine <- equations[equations$model=="n/t" & equations$spp=="pine.spp", "beta0"] * (dbh.recon.vlf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="pine.spp", "beta1"])
dbh.recon.vlf.stack2$nt.pipo <- equations[equations$model=="n/t" & equations$spp=="pipo", "beta0"] * (dbh.recon.vlf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="pipo", "beta1"])
dbh.recon.vlf.stack2$nt.vcnp <- equations[equations$model=="n/t" & equations$spp=="vcnp", "beta0"] * (dbh.recon.vlf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="vcnp", "beta1"])
dbh.recon.vlf.stack2$nt.pine.dom <- equations[equations$model=="n/t" & equations$spp=="pine.dom", "beta0"] * (dbh.recon.vlf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="pine.dom", "beta1"])
summary(dbh.recon.vlf.stack2)
vlf.bm.tree.gf <- aggregate(dbh.recon.vlf.stack2[,c("jenkins.pine","nt.piaz", "nt.pine", "nt.pipo", "nt.vcnp","nt.pine.dom")], by=list(dbh.recon.vlf.stack2$tree, dbh.recon.vlf.stack2$year), FUN=sum, na.rm=T)
summary(vlf.bm.tree.gf)
names(vlf.bm.tree.gf) <- c("tree","year",names(vlf.bm.tree.gf[,3:8]))
summary(vlf.bm.tree.gf)
names(vlf.bm.tree.gf)
vlf.bm.avg.gf <- aggregate(vlf.bm.tree.gf[,c("jenkins.pine","nt.piaz", "nt.pine", "nt.pipo", "nt.vcnp","nt.pine.dom")], by=list(vlf.bm.tree.gf$year), FUN=sum, na.rm=T)
vlf.bm.avg.sd.gf <- aggregate(vlf.bm.tree.gf[,c("jenkins.pine","nt.piaz", "nt.pine", "nt.pipo", "nt.vcnp","nt.pine.dom")], by=list(vlf.bm.tree.gf$year), FUN=sd, na.rm=T)
summary(vlf.bm.avg.sd.gf)
summary(vlf.bm.avg.gf)
names(vlf.bm.avg.gf) <- c("year", names(vlf.bm.avg.gf[,2:7]))
names(vlf.bm.avg.sd.gf) <- c("year", names(vlf.bm.avg.sd.gf[,2:7]))
dbh.recon.vuf.stack2$jenkins.spruce <- exp(equations[equations$model=="jenkins" & equations$spp=="spruce", "beta0"]
+ equations[equations$model=="jenkins" & equations$spp=="spruce", "beta1"]
* log(dbh.recon.vuf.stack2$dbh))
summary(dbh.recon.vuf.stack2)
dbh.recon.vuf.stack2$nt.spruce <- equations[equations$model=="n/t" & equations$spp=="spruce", "beta0"] * (dbh.recon.vuf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="spruce", "beta1"])
dbh.recon.vuf.stack2$nt.vcnp <- equations[equations$model=="n/t" & equations$spp=="vcnp", "beta0"] * (dbh.recon.vuf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="vcnp", "beta1"])
dbh.recon.vuf.stack2$nt.mixed.con <- equations[equations$model=="n/t" & equations$spp=="mixed.con", "beta0"] * (dbh.recon.vuf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="mixed.con", "beta1"])
dbh.recon.vuf.stack2$nt.psme <- equations[equations$model=="n/t" & equations$spp=="psme", "beta0"] * (dbh.recon.vuf.stack2$dbh)^(equations[equations$model=="n/t" & equations$spp=="psme", "beta1"])
summary(dbh.recon.vuf.stack2)
vuf.bm.tree.gf <- aggregate(dbh.recon.vuf.stack2[,c("jenkins.spruce","nt.spruce", "nt.vcnp", "nt.mixed.con", "nt.psme")], by=list(dbh.recon.vuf.stack2$tree, dbh.recon.vuf.stack2$year), FUN=sum, na.rm=T)
summary(vuf.bm.tree.gf)
names(vuf.bm.tree.gf) <- c("tree","year",names(vuf.bm.tree[,3:7]))
vuf.bm.avg.gf <- aggregate(vuf.bm.tree.gf[,c("jenkins.spruce","nt.spruce", "nt.vcnp", "nt.mixed.con","nt.psme")], by=list(vuf.bm.tree.gf$year), FUN=sum, na.rm=T)
vuf.bm.avg.sd.gf <- aggregate(vuf.bm.tree.gf[,c("jenkins.spruce","nt.spruce", "nt.vcnp", "nt.mixed.con","nt.psme")], by=list(vuf.bm.tree.gf$year), FUN=sd, na.rm=T)
summary(vuf.bm.avg.sd.gf)
summary(vuf.bm.avg.gf)
names(vuf.bm.avg.gf) <- c("year", names(vuf.bm.avg.gf[,2:6]))
names(vuf.bm.avg.sd.gf) <- c("year", names(vuf.bm.avg.sd.gf[,2:6]))
########################################################################################
#trying to plot kg/tree with error ribbons
########################################################################################
#vlf.year2
#vuf.year2
#objects with the data I need
summary(vlf.year2)
summary(vuf.year2)
qplot(x=year, y= nt.pipo.sum,data=vlf.year2, geom="line") + theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) + scale_x_continuous(name="Year") + scale_y_continuous(name="kg Biomass / tree") + ggtitle("kg.BM/Tree") +
geom_ribbon(aes(ymin=nt.pipo.sum - nt.pipo.sd, ymax=nt.pipo.sum + nt.pipo.sd), alpha=0.5)
poster.theme<-theme(axis.line=element_line(color="black"), panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(),
panel.background=element_blank(), axis.text.x=element_text(angle=0, color="black", size=20),
axis.text.y=element_text(angle=0, color="black", size=20), axis.title.x=element_text(face="bold", size=24),
axis.title.y=element_text(face="bold", size=24), strip.text=element_text(face="bold", size=rel(1.75)),
title=element_text(face="bold", size=28))
#adjusted biomass in kg to account for plot area
#units now in kg of Biomass per m^2
vlf.year3<- vlf.year2[,2:ncol(vlf.year2)]/768
vlf.year3$year<- vlf.year2$year
vlf.plot<- ggplot()  +
# plotting total site basal area
geom_ribbon(data=vlf.year3, aes(x=year, ymin=nt.pipo.sum - 1.96*nt.pipo.sd, ymax=nt.pipo.sum + 1.96*nt.pipo.sd), alpha=0.15, fill="red")+
geom_ribbon(data=vlf.year3, aes(x=year, ymin=nt.piaz.sum - 1.96*nt.piaz.sd, ymax=nt.piaz.sum + 1.96*nt.piaz.sd), alpha=0.15, fill="orange")+
geom_ribbon(data=vlf.year3, aes(x=year, ymin=nt.pine.spp.sum - 1.96*nt.pine.spp.sd, ymax=nt.pine.spp.sum + 1.96*nt.pine.spp.sd), alpha=0.15, fill="green")+
#geom_ribbon(data=vlf.year2, aes(x=year, ymin=nt.vcnp.sum - 1.96*nt.vcnp.sd, ymax=nt.vcnp.sum + 1.96*nt.vcnp.sd), alpha=0.15, fill="purple")+
geom_ribbon(data=vlf.year3, aes(x=year, ymin=nt.pine.dom.sum - 1.96*nt.pine.dom.sd, ymax=nt.pine.dom.sum + 1.96*nt.pine.dom.sd), alpha=0.15, fill="blue")+
geom_line(data=vlf.year3,  aes(x=year, y=nt.pipo.sum), size=1.5, colour="red") +
geom_line(data= vlf.year3, aes(x=year, y=nt.piaz.sum), size=1.5, colour="orange") +
geom_line(data= vlf.year3, aes(x=year, y=nt.pine.spp.sum), size=1.5,colour="green") +
#geom_line(data= vlf.year2, aes(x=year, y=nt.vcnp.sum), size=1.5,colour="purple") +
geom_line(data= vlf.year3, aes(x=year, y=nt.pine.dom.sum), size=1.5,colour="blue") +
#geom_line(data= vlf.bm.avg.gf, aes(x=year, y=jenkins.pine), size=1.5,colour="black") +
geom_point(aes(x=2012, y=current.nt.pipo.sum/768), size=4, colour="red")+
geom_point(aes(x=2012, y=current.nt.piaz.sum/768), size=4, colour="orange")+
geom_point(aes(x=2012, y=current.nt.pine.sum/768), size=4, colour="green")+
#geom_point(aes(x=2012, y=current.nt.vcnp.sum), size=4, colour="purple")+
geom_point(aes(x=2012, y=current.nt.pine.dom.sum/768), size=4, colour="blue")+
#geom_point(data=vlf.bm.sums, aes(x=2012, y=biomass[1]), size=4, colour="black")+
geom_errorbar(aes(x=2012, ymin=(current.nt.pipo.sum/768)-1.96*(current.nt.pipo.sd/768), ymax=(current.nt.pipo.sum/768)+1.96*(current.nt.pipo.sd/768)), width=0.25, colour="red") +
geom_errorbar(aes(x=2012, ymin=(current.nt.piaz.sum/768)-1.96*(current.nt.piaz.sd/768), ymax=(current.nt.piaz.sum/768)+1.96*(current.nt.piaz.sd/768)), width=0.25, colour="orange") +
geom_errorbar(aes(x=2012, ymin=(current.nt.pine.sum/768)-1.96*(current.nt.pine.sd/768), ymax=(current.nt.pine.sum/768)+1.96*(current.nt.pine.sd/768)), width=0.25, colour="green") +
# geom_errorbar(aes(x=2012, ymin=current.nt.vcnp.sum-1.96*current.nt.vcnp.sd, ymax=current.nt.vcnp.sum+1.96*current.nt.vcnp.sd), width=0.25, colour="purple") +
geom_errorbar(aes(x=2012, ymin=(current.nt.pine.dom.sum/768)-1.96*(current.nt.pine.dom.sd/768), ymax=(current.nt.pine.dom.sum/768)+1.96*(current.nt.pine.dom.sd/768)), width=0.25, colour="blue") +
# all of that theme stuff you can just pre-set
poster.theme
#theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12))+
# scale_fill_discrete(name="Model", labels = c("nt.pipo.sum", "nt.piaz.sum", "nt.pine.spp", "nt.vcnp.sum", "nt.pine.dom.sum"))
# telling what colors to make the lines for species
#scale_color_manual(values=c("red", "blue", "orange", "green"))
vlf.plot+ggtitle("Lower Flux Tower")+scale_y_continuous("kg Biomass m-2")+scale_x_continuous("Year")
#adjusted biomass in kg to account for plot area
#units now in kg of Biomass per m^2
vuf.year3<-as.data.frame(vuf.year2[,2:ncol(vuf.year2)]/1152)
vuf.year3$year<-vuf.year2$year
vuf.plot<- ggplot()  +
# plotting error ribbons
geom_ribbon(data=vuf.year3, aes(x=year, ymin=nt.spruce.sum - 1.96*nt.spruce.sd, ymax=nt.spruce.sum + 1.96*nt.spruce.sd, fill="nt.spruce"), alpha=0.15,fill="red")+
geom_ribbon(data=vuf.year3, aes(x=year, ymin=nt.vcnp.sum - 1.96*nt.vcnp.sd, ymax=nt.vcnp.sum + 1.96*nt.vcnp.sd, fill="nt.vcnp"), alpha=0.15, fill="orange")+
geom_ribbon(data=vuf.year3, aes(x=year, ymin=nt.mixed.con.sum - 1.96*nt.mixed.con.sd, ymax=nt.mixed.con.sum + 1.96*nt.mixed.con.sd, fill="mixed.con"), alpha=0.15, fill="green")+
geom_line(data=vuf.year3,  aes(x=year, y=nt.spruce.sum), size=1.5,colour="red") +
geom_line(data= vuf.year3, aes(x=year, y=nt.vcnp.sum), size=1.5, colour="orange") +
geom_line(data= vuf.year3, aes(x=year, y=nt.mixed.con.sum), size=1.5, colour="green") +
#geom_line(data= vuf.bm.avg.gf, aes(x=year, y=jenkins.spruce), size=1.5, colour="black") +
geom_point(aes(x=2012, y=current.nt.spruce.sum/1152), size=4,, colour="red")+
geom_point(aes(x=2012, y=current.nt.vcnp.sum/1152), size=4,, colour="orange")+
geom_point(aes(x=2012, y=current.nt.mixed.con.sum/1152), size=4, colour="green")+
#geom_point(data= vuf.bm.sums, aes(x=2012, y=biomass[1]), size=4,, colour="black")+
geom_errorbar(aes(x=2012, ymin=(current.nt.spruce.sum/1152)-1.96*(current.nt.spruce.sd/1152), ymax=(current.nt.spruce.sum/1152)+1.96*(current.nt.spruce.sd/1152), colour="red"), width=0.25,, colour="red")+
geom_errorbar(aes(x=2012, ymin=(current.nt.vcnp.sum/1152)-1.96*(current.nt.vcnp.sd/1152), ymax=(current.nt.vcnp.sum/1152)+1.96*(current.nt.vcnp.sd/1152),colour="orange"), width=0.25, colour="orange")+
geom_errorbar(aes(x=2012, ymin=(current.nt.mixed.con.sum/1152)-1.96*(current.nt.mixed.con.sd/1152), ymax=(current.nt.mixed.con.sum/1152)+1.96*(current.nt.mixed.con.sd/1152), colour="green"), width=0.25,, colour="green")+
# all of that theme stuff you can just pre-set
poster.theme
#theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12,))+
# scale_colour_manual(values=c("red", "orange", "green"),name= "Model",labels=c("nt.spruce", "nt.vcnp", "nt.mixed.con"))
vuf.plot+ ggtitle("Upper Flux Tower")+scale_y_continuous("kg Biomass m-2")+scale_x_continuous("Year")
#plotting sample size of each site
counts<- read.csv("dated.counts.csv", header=T)
par(mfcol=c(1,1))
plot(counts$vuf.count~counts$year, type="l", lwd=2, xlab="year", ylab="Count", main="Sample Size", col="red", ylim=range(counts$vlf.count, na.rm=T))
par(new=T)
plot(counts$vlf.count~counts$year, type="l", lwd=2, xlab="year", ylab="Count", col="blue",ylim=range(counts$vlf.count, na.rm=T))
legend("bottomright", legend=c("VUF", "VLF"), lty="solid", lwd="2", col=c("red", "blue"), bty="n", cex=1.5)
################################################
#taking the mean of all the models of each site
################################################
names(vlf.year2)
names(vuf.year2)
#VLF
model.mean<-as.data.frame(vlf.year2$year)
names(model.mean)<- c("year")
for(i in 1:length(vlf.year2$year)){
model.mean[i, "vlf.mean"] <- mean(vlf.year2[i,"nt.pipo.sum"], vlf.year2[i,"nt.piaz.sum"], vlf.year2[i,"nt.pine.spp.sum"],vlf.year2[i,"nt.pine.dom.sum"], na.rm=T)
model.mean[i, "vlf.sd"] <- sqrt(vlf.year2[i,"nt.pipo.sd"]^2+ vlf.year2[i,"nt.piaz.sd"]^2+ vlf.year2[i,"nt.pine.spp.sd"]^2+ vlf.year2[i,"nt.pine.dom.sd"]^2)
}
#VUF
for(i in 1:length(vuf.year2$year)){
model.mean[i, "vuf.mean"] <- mean(vuf.year2[i,"nt.spruce.sum"], vuf.year2[i,"nt.vcnp.sum"], vuf.year2[i,"nt.mixed.con.sum"], na.rm=T)
model.mean[i, "vuf.sd"] <- sqrt(vuf.year2[i,"nt.spruce.sd"]^2+vuf.year2[i,"nt.vcnp.sd"]^2+ vuf.year2[i,"nt.mixed.con.sd"]^2)
}
model.mean
current.mean<- as.data.frame(mean(current.nt.pipo.sum, current.nt.piaz.sum, current.nt.pine.sum, current.nt.pine.dom.sum))
names(current.mean)<- c("vlf.mean")
current.mean$vlf.sd <- sqrt(mean(current.nt.pipo.sd^2+ current.nt.piaz.sd^2+ current.nt.pine.sd^2+current.nt.pine.dom.sd^2))
current.mean$vuf.mean<- mean(current.nt.spruce.sum, current.nt.vcnp.sum, current.nt.mixed.con.sum)
current.mean$vuf.sd<- sqrt(current.nt.spruce.sd^2+ current.nt.vcnp.sd^2+ current.nt.mixed.con.sd^2)
#plotsof mean of plots
mean.plot<- ggplot()  +
# plotting total site basal area
geom_ribbon(data=model.mean, aes(x=year, ymin=vlf.mean - 1.96*vlf.sd, ymax=vlf.mean + 1.96*vlf.sd), alpha=0.15, fill="red")+
geom_ribbon(data=model.mean, aes(x=year, ymin=vuf.mean - 1.96*vuf.sd, ymax=vuf.mean + 1.96*vuf.sd), alpha=0.15, fill="blue")+
geom_line(data=model.mean,  aes(x=year, y=vlf.mean), size=1.5, colour="red") +
geom_line(data= model.mean, aes(x=year, y=vuf.mean), size=1.5, colour="blue") +
geom_point(data=current.mean, aes(x=2012, y=vlf.mean), size=4, colour="red")+
geom_point(data=current.mean, aes(x=2012, y=vuf.mean), size=4, colour="blue")+
geom_errorbar(data=current.mean,aes(x=2012, ymin=vlf.mean - 1.96*vlf.sd, ymax=vlf.mean + 1.96*vlf.sd), color="red")+
geom_errorbar(data=current.mean, aes(x=2012, ymin=vuf.mean - 1.96*vuf.sd, ymax=vuf.mean + 1.96*vuf.sd), color="blue")+
# all of that theme stuff you can just pre-set
poster.theme
#theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12))
#scale_fill_discrete(name="Model", labels = c("nt.pipo.sum", "nt.piaz.sum", "nt.pine.spp", "nt.vcnp.sum", "nt.pine.dom.sum"))
# telling what colors to make the lines for species
#scale_color_manual(values=c("red", "blue", "orange", "green"))
mean.plot+ggtitle("Ensemble Biomass")+scale_y_continuous("kg Biomass")+scale_x_continuous("Year")
#Plot biomass in kilograms
#divide all biomass by the area of the respective plots
#upper site: 24m x 24m plots = 1152 m2 combined plot area
#lower site: p1=12m x 12m; p2= 26m x 24 m; 768m2 combined plot area
current.mean
head(model.mean)
current.mean$vlf.mean.area <- current.mean$vlf.mean/768
current.mean$vlf.sd.area <- current.mean$vlf.sd/768
current.mean$vuf.mean.area <- current.mean$vuf.mean/1152
current.mean$vuf.sd.area <- current.mean$vuf.sd/1152
model.mean$vlf.mean.area <- model.mean$vlf.mean/768
model.mean$vlf.sd.area <- model.mean$vlf.sd/768
model.mean$vuf.mean.area <- model.mean$vuf.mean/1152
model.mean$vuf.sd.area <- model.mean$vuf.sd/1152
mean.area.plot<- ggplot()  +
# plotting total site basal area
geom_ribbon(data=model.mean, aes(x=year, ymin=(vlf.mean.area - 1.96*vlf.sd.area), ymax=(vlf.mean.area + 1.96*vlf.sd.area)), alpha=0.15, fill="red")+
geom_ribbon(data=model.mean, aes(x=year, ymin=(vuf.mean.area - 1.96*vuf.sd.area), ymax=(vuf.mean.area + 1.96*vuf.sd.area)), alpha=0.15, fill="blue")+
geom_line(data=model.mean,  aes(x=year, y=vlf.mean.area), size=1.5, colour="red") +
geom_line(data= model.mean, aes(x=year, y=vuf.mean.area), size=1.5, colour="blue") +
geom_point(data=current.mean, aes(x=2012, y=vlf.mean.area), size=4, colour="red")+
geom_point(data=current.mean, aes(x=2012, y=vuf.mean.area), size=4, colour="blue")+
geom_errorbar(data=current.mean,aes(x=2012, ymin=(vlf.mean.area - 1.96*vlf.sd.area), ymax=(vlf.mean.area + 1.96*vlf.sd.area)), color="red")+
geom_errorbar(data=current.mean, aes(x=2012, ymin=(vuf.mean.area - 1.96*vuf.sd.area), ymax=(vuf.mean.area + 1.96*vuf.sd.area)), color="blue")+
# all of that theme stuff you can just pre-set
poster.theme
#theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12))
#scale_fill_discrete(name="Model", labels = c("nt.pipo.sum", "nt.piaz.sum", "nt.pine.spp", "nt.vcnp.sum", "nt.pine.dom.sum"))
# telling what colors to make the lines for species
#scale_color_manual(values=c("red", "blue", "orange", "green"))
mean.area.plot+ggtitle("Modeled Biomass")+scale_y_continuous("kg Biomass m-2")+scale_x_continuous("Year")
##getting differences between modeled and measured biomass for 2012
difference.bm<- as.data.frame(current.mean$vlf.mean.area - model.mean$vlf.mean.area[model.mean$year=="2011"])
names(difference.bm)<- c("vlf.diff")
difference.bm$vuf.diff <- current.mean$vuf.mean.area - model.mean$vuf.mean.area[model.mean$year=="2011"]
names(difference.bm)<- c("vlf.diff", "vuf.diff")
difference.bm$vlf.perc <- difference.bm$vlf.diff/current.mean$vlf.mean.area
difference.bm$vuf.perc <- difference.bm$vuf.diff/current.mean$vuf.mean.area
vuf.bm.means$perc.diff <- (vuf.bm.means$difference/vuf.bm.means$biomass)
########################################################################################
#Calculating the Interannual differences in the modeled biomass means
########################################################################################
head(model.mean)
inter.diff<-as.data.frame(model.mean)
#names(inter.diff)<-c("year")
model.mean[model.mean == 0] <- NA
inter.diff[,2:ncol(inter.diff)]<- NA
for(j in 2:ncol(model.mean)) {
for( i in 2:length(inter.diff[,j])){
inter.diff[i,j] <- ifelse(i-1 > 0, model.mean[i,j] - model.mean[i-1,j], NA)
}
}
model.mean
inter.diff2<-inter.diff[,2:ncol(inter.diff)]*1000
inter.diff2$year <- inter.diff$year
plot(inter.diff2$vlf.mean.area ~ inter.diff2$year, type="l", xlim=c(2000,2011))
plot(inter.diff2$vuf.mean.area ~ inter.diff2$year, type="l", xlim=c(2000,2011))
##############################
#need interannual differences for each site
#to do this need to take the difference of each cumulative model and THEN take the mean
vlf.year2[vlf.year2==0]<-NA
vuf.year2[vuf.year2==0]<-NA
#vlf.year2[vlf.year2==0] <-NA
vlf.model.diff<- as.data.frame(vlf.year2)
vlf.model.diff[,2:ncol(vlf.model.diff)]<-NA
for(j in 2:ncol(vlf.year2)) {
for( i in 2:length(vlf.model.diff[,j])){
vlf.model.diff[i,j] <- ifelse(i-1 > 0, vlf.year2[i,j] - vlf.year2[i-1,j], NA)
}
}
model.mean.diff<-as.data.frame(model.mean)
model.mean.diff[,2:ncol(model.mean.diff)]<-NA
for(i in 1:length(vlf.model.diff$year)){
model.mean.diff[i, "vlf.mean"] <- mean(vlf.model.diff[i,"nt.pipo.sum"], vlf.model.diff[i,"nt.piaz.sum"], vlf.model.diff[i,"nt.pine.spp.sum"],vlf.model.diff[i,"nt.pine.dom.sum"], na.rm=T)
model.mean.diff[i, "vlf.sd"] <- sqrt(vlf.model.diff[i,"nt.pipo.sd"]^2+ vlf.model.diff[i,"nt.piaz.sd"]^2+ vlf.model.diff[i,"nt.pine.spp.sd"]^2+ vlf.model.diff[i,"nt.pine.dom.sd"]^2)
}
summary(model.mean.diff)
vuf.model.diff<- as.data.frame(vuf.year2)
vuf.model.diff[,2:ncol(vuf.model.diff)]<-NA
for(j in 2:ncol(vuf.year2)) {
for( i in 2:length(vuf.model.diff[,j])){
vuf.model.diff[i,j] <- ifelse(i-1 > 0, vuf.year2[i,j] - vuf.year2[i-1,j], NA)
}
}
for(i in 1:length(vlf.model.diff$year)){
model.mean.diff[i, "vuf.mean"] <- mean(vuf.model.diff[i,"nt.spruce.sum"], vuf.model.diff[i,"nt.vcnp.sum"], vuf.model.diff[i,"nt.mixed.con.sum"], na.rm=T)
model.mean.diff[i, "vuf.sd"] <- sqrt(vuf.model.diff[i,"nt.spruce.sd"]^2+vuf.model.diff[i,"nt.vcnp.sd"]^2+ vuf.model.diff[i,"nt.mixed.con.sd"]^2)
}
summary(model.mean.diff)
model.mean.diff$vlf.mean.area <- model.mean.diff$vlf.mean/768
model.mean.diff$vlf.sd.area <- model.mean.diff$vlf.sd/768
model.mean.diff$vuf.mean.area <- model.mean.diff$vuf.mean/1152
model.mean.diff$vuf.sd.area <- model.mean.diff$vuf.sd/1152
summary(model.mean.diff)
summary(inter.diff2)
plot(model.mean.diff$vlf.mean.area ~ inter.diff2$year, type="l", xlim=c(2000,2011))
plot(model.mean.diff$vuf.mean.area ~ inter.diff2$year, type="l", xlim=c(2000,2011))
###ROSS START HERE NEXT TIME FOR PROOF READING AND ANNOTATION!!!
#######################################
#writing csv's for the files used in the bootstrapping process, and the files produced by the bootstrap
#######################################
write.csv(vlf.year2, "vlf.boot.biomass.csv")
write.csv(vuf.year2, "vlf.boot.biomass.csv")
write.csv(dbh.recon.vuf.tree, "vuf.stacked.dbh.csv")
write.csv(dbh.recon.vlf.tree, "vlf.stacked.dbh.csv")
tree.data <- read.csv("TreeData.csv", header=T)
dbh.bins1 <- seq(10, max(tree.data$dbh[tree.data$site == "Morgan Monroe State Park"], na.rm=T), 5) # 5 cm bins based on the range of your trees
poster.theme<-theme(axis.line=element_line(color="black"), panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(),
panel.background=element_blank(), axis.text.x=element_text(angle=0, color="black", size=21),
axis.text.y=element_text(angle=0, color="black", size=24), axis.title.x=element_text(face="bold", size=28),
axis.title.y=element_text(face="bold", size=28), strip.text=element_text(face="bold", size=rel(1.75)),
mmf.colors2 <- c("purple", "wheat3", "cadetblue3", "orange4", "darkgreen", "hotpink1", "black", "red1", "brown", "goldenrod1", "medium purple1")
qplot(x=dbh, data=tree.data[tree.data$site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=species) + facet_grid(site ~ .) +
scale_fill_manual(values=mmf.colors2) +
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH (cm)", limit=c(0,100)) + ggtitle("Morgan-Monroe")+ scale_y_continuous(name="Count")+ #+ scale_fill_manual(values=as.vector(species.col.tree$Color))
poster.theme
mmf.colors2 <- c("purple", "wheat3", "cadetblue3", "orange4", "darkgreen", "hotpink1", "black", "red1", "brown", "goldenrod1", "medium purple1")
qplot(x=dbh, data=tree.data[tree.data$site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=species) + facet_grid(site ~ .) +
scale_fill_manual(values=mmf.colors2) +
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH (cm)", limit=c(0,100)) + ggtitle("Morgan-Monroe")+ scale_y_continuous(name="Count")+ #+ scale_fill_manual(values=as.vector(species.col.tree$Color))
poster.theme
dim(tree.data$species[tree.data$site == "Morgan MOnroe State Park"])
summary(tree.data$species[tree.data$site == "Morgan MOnroe State Park"])
unique(tree.data$species[tree.data$site == "Morgan MOnroe State Park"])
qplot(x=dbh, data=tree.data[tree.data$site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=species) + facet_grid(site ~ .) +
#scale_fill_manual(values=mmf.colors2) +
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH (cm)", limit=c(0,100)) + ggtitle("Morgan-Monroe")+ scale_y_continuous(name="Count")+ #+ scale_fill_manual(values=as.vector(species.col.tree$Color))
poster.theme
summary(trees.use)
qplot(x=dbh, data=tree.data[trees.use$Site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=Species) + facet_grid(site ~ .) +
#scale_fill_manual(values=mmf.colors2) +
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH (cm)", limit=c(0,100)) + ggtitle("Morgan-Monroe")+ scale_y_continuous(name="Count")+ #+ scale_fill_manual(values=as.vector(species.col.tree$Color))
poster.theme
dbh.bins1 <- seq(10, max(trees.use$DBH..cm.[tree.data$Site == "Morgan Monroe State Park"], na.rm=T), 5) # 5 cm bins based on the range of your trees
dbh.bins1 <- seq(10, max(trees.use$DBH..cm.[trees.use$Site == "Morgan Monroe State Park"], na.rm=T), 5) # 5 cm bins based on the range of your trees
qplot(x=dbh, data=tree.data[trees.use$Site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=Species) + facet_grid(Site ~ .) +
#scale_fill_manual(values=mmf.colors2) +
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH (cm)", limit=c(0,100)) + ggtitle("Morgan-Monroe")+ scale_y_continuous(name="Count")+ #+ scale_fill_manual(values=as.vector(species.col.tree$Color))
poster.theme
qplot(x=dbh, data=trees.use[trees.use$Site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=Species) + facet_grid(Site ~ .) +
qplot(x=DBH..cm., data=trees.use[trees.use$Site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=Species) + facet_grid(Site ~ .) +
qplot(x=DBH..cm., data=trees.use[trees.use$Site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=Species) + facet_grid(Site ~ .) +
#scale_fill_manual(values=mmf.colors2) +
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH (cm)", limit=c(0,100)) + ggtitle("Morgan-Monroe")+ scale_y_continuous(name="Count")+ #+ scale_fill_manual(values=as.vector(species.col.tree$Color))
poster.theme
mmf.colors2 <- c("purple", "wheat3", "cadetblue3", "orange4", "darkgreen","blue", "hotpink1", "black", "red1", "brown", "goldenrod1", "medium purple1")
qplot(x=DBH..cm., data=trees.use[trees.use$Site == "Morgan Monroe State Park",], geom="histogram", breaks=dbh.bins1, fill=Species) + facet_grid(Site ~ .) +
scale_fill_manual(values=mmf.colors2) +
theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=12), axis.text.y=element_text(color="black", size=12)) +
scale_x_continuous(name="DBH (cm)", limit=c(0,100)) + ggtitle("Morgan-Monroe")+ scale_y_continuous(name="Count")+ #+ scale_fill_manual(values=as.vector(species.col.tree$Color))
poster.theme
nep.morgan.monthly <- ts(read.table("../NACP/MMS_L2gapfilled_NEE_monthly.txt", header = T), end = 2013, frequency = 1)
summary(nep.morgan.monthly)
names(nep.morgan.monthly)<- c("year", "month", "nep")
summary(nep.morgan.monthly)
names(nep.morgan.monthly)<- c(year, month, nep)
names(nep.morgan.monthly)<- c("year", "month", "nep")
nep.morgan.monthly
nep.morgan.monthly <- ts(read.table("../NACP/MMS_L2gapfilled_NEE_monthly.txt", header = T), end = 2013, frequency = 1)
summary(nep.morgan.annual)
summary(nep.morgan.monthly)
nep.morgan.monthly
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_ross.csv", header = T), end = 2013, frequency = 1)
summary(nep.morgan.monthly)
nep.niwot <- ts(read.table("../NACP/monthly_nep_niwot.txt", header = T), end = 2013, frequency = 1)
summary(nep.niwot)
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_ross.csv", header = T), end = 2013, frequency = 12)
summary(nep.morgan.annual)
summary(nep.niwot)
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_ross.csv", header = T), end = 2013, frequency = 1)
summary(nep.morgan.monthly)
ts.plot(nep.morgan.monthly*-1)
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_ross.csv", header = T)[2:13], end = 2013, frequency = 1)
summary(nep.morgan.annual)
summary(nep.morgan.monthly)
ts.plot(nep.morgan.monthly*-1)
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_ross.csv", header = T)[2:13], end = 2013, frequency = 12)
summary(nep.morgan.monthly)
ts.plot(nep.morgan.monthly*-1)
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly.txt", header = T), end = 2013, frequency = 12)
ts.plot(nep.morgan.monthly*-1)
summary(nep.morgan.monthly)
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_2.txt", header = T), end = 2013, frequency = 12)
summary(nep.morgan.monthly)
ts.plot(nep.morgan.monthly*-1)
ts.plot(nep.morgan.monthly)
nep.morgan.monthly
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_2.txt", header = T),start = 1999, end = 2013, frequency = 12)
nep.morgan.monthly
ts.plot(nep.morgan.monthly)
nep.morgan.monthly <- ts(read.csv("../NACP/MMS_L2gapfilled_NEE_monthly_2.txt", header = T),start = 1999, end = 2013, frequency = 1)
nep.morgan.monthly
nep.morgan.monthly <- ts(read.table("../NACP/MMS_L2gapfilled_NEE_monthly_2.txt", header = T),start = 1999, end = 2013, frequency = 12)
nep.morgan.monthly
ts.plot(nep.morgan.monthly[2])
ts.plot(nep.morgan.monthly[,2])
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="dotdash", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue")
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue")
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=0.75, lty=c(1,4,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="dotdash", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=0.75, lty=c(1,4,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=0.75, lty=c(1,4,2),lwd=3, bty="n")
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=0.75, lty=c(1,1,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=0.75, lty=c(1,1,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=0.75, lty=c(1,1,2),lwd=3, bty="n", cex=2)
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=1.5, lty=c(1,1,2),lwd=3, bty="n")
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=1, lty=c(1,1,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend(x= 2007.5,y=600, legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=1, lty=c(1,1,2),lwd=3, bty="n")
legend("topright", legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=1, lty=c(1,1,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend("topright", legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=1, lty=c(1,1,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend("bottomright", legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=1, lty=c(1,1,2),lwd=3, bty="n")
par(new=F)
par(cex=2, tck=0.03, mar=c(4, 4.25, 2.5, 1))
#plot(forcomp.niwot[,2], type="l", lty="dotdash", col="darkgreen", xlim=c(1999,2012),ylim=c(0,600), ylab="NEP (gC/m2)", lwd=3, yaxt="n")
#  axis(2,las=1)
#  par(new=T)
plot(forcomp.morgan.all[,2], type="l", col="blue",lty="solid", xlim=c(1999,2012), ylim=range(0,600), ylab="NEP (gC/m2)",axes=T,  xlab="Year", lwd=3)
par(new=T)
#plot(forcomp.niwot[,1], type="l",  col="darkgreen",xlim=c(1999,2012), ylim=c(0,600), axes=F, ylab="", xlab="", lwd=3)
#par(new=T)
plot(forcomp.morgan.all[,1], type="l", col="red1", xlim=c(1999,2012), ylim=range(0,600), axes=F, ylab="", xlab="", lwd=3, main="NEP Measurements and aNPP Estimates")
lines(inc.site.ci[1,]*1000*0.5~names(inc.site.ci[1,]), ylim=c(0,600),type="l", lty="dashed", col="blue", lwd=2)
lines(inc.site.ci[2,]*1000*0.5~names(inc.site.ci[2,]), ylim=c(0,600), type="l", lty="dashed", col="blue", lwd=2)
#lines(jenkins.general*1000*0.5, type="l",lty="solid", ylim=c(0,600),col="green", lwd=3)
legend("bottomright", legend= c("MMF Tower", "MMF Tree Rings", "95% CI"), col= c("red1","blue", "blue"), cex=1, lty=c(1,1,2),lwd=3, bty="n")
#setwd("~/Dropbox/PalEON CR/Tree Rings/Tree-Rings-and-Biomass/Uncertainty_analysis")
library(dplR)
library(ggplot2)
se <- function(x){
sd(x, na.rm=TRUE) / sqrt((length(!is.na(x))))}
# Run this script after the gap filling process scripts have been run
# For the NACP15 abstract run Tree_rw_gapfilled.csv
# load in the diameter reconstructions generated by Christy.  These are based upon gapfilled tree ring data using the fancy model.
g.filled.diam <- read.csv("Gapfilling_DBHrecon_Litvak.csv", header=T, row.names=1)
